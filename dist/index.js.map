{"version":3,"file":"index.js","names":["_lodash","_interopRequireDefault","require","_util","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_readOnlyError","r","TypeError","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","a","_arrayLikeToArray","t","toString","call","slice","name","Array","from","test","length","n","l","i","u","f","next","Object","done","push","value","isArray","_classCallCheck","_defineProperties","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","keys","_","compact","filter","p","fail","type","node","Error","format","JSON","stringify","parens","string","indent","text","count","arguments","undefined","Deparser","exports","tree","deparseQuery","_this","map","deparse","join","deparseNodes","nodes","context","_this2","list","separator","quote","_this3","escape","literal","replace","convertTypeName","typeName","size","names","args","_this4","_names$map","_names$map2","catalog","mods","str","res","item","isNumber","values","A_Expr","output","kind","lexpr","schema","operator","concat","rexpr","op","FuncCall","Null","Alias","aliasname","colnames","A_ArrayExpr","elements","A_Const","val","A_Indices","lidx","uidx","A_Indirection","arg","indirection","subnode","A_Star","BitString","prefix","substring","BoolExpr","boolop","BooleanTest","tests","booltesttype","CaseExpr","defresult","CoalesceExpr","CollateClause","collname","ColumnDef","colname","raw_default","constraints","ColumnRef","_this5","fields","field","CommonTableExpr","ctename","aliascolnames","ctequery","DefElem","defname","toUpperCase","Integer","ival","Float","_this6","params","agg_star","funcname","order","withinGroup","agg_within_group","agg_order","agg_distinct","func_variadic","agg_filter","over","GroupingFunc","GroupingSet","content","IntoClause","rel","JoinExpr","larg","isNatural","jointype","quals","usingClause","rarg","alias","using","wrapped","LockingClause","strengths","strength","lockedRels","MinMaxExpr","NamedArgExpr","NullTest","nulltesttype","ParamRef","number","RangeFunction","lateral","funcs","functions","funcCall","calls","is_rowsfrom","ordinality","coldeflist","defList","RangeSubselect","subquery","RangeTableSample","relation","method","repeatable","RangeVar","inhOpt","relpersistence","schemaname","relname","ResTarget","RowExpr","row_format","SelectStmt","_this7","withClause","valuesLists","sets","all","distinctClause","clause","targetList","intoClause","fromClause","whereClause","lists","v","groupClause","havingClause","windowClause","windows","w","window","WindowDef","sortClause","limitCount","limitOffset","lockingClause","forEach","SortBy","sortby_dir","useOp","sortby_nulls","SubLink","subLinkType","subselect","testexpr","operName","TypeCast","TypeName","_this8","last","deparseInterval","setof","typmods","arrayBounds","CaseWhen","expr","result","VariableSetStmt","is_local","VariableShowStmt","_this9","empty","partitionClause","orderClause","frameOptions","deparseFrameOptions","refname","startOffset","endOffset","windowParts","useParens","partition","orders","WithClause","recursive","ctes","options","refName","FRAMEOPTION_NONDEFAULT","FRAMEOPTION_RANGE","FRAMEOPTION_ROWS","FRAMEOPTION_BETWEEN","FRAMEOPTION_START_UNBOUNDED_PRECEDING","FRAMEOPTION_END_UNBOUNDED_PRECEDING","FRAMEOPTION_START_UNBOUNDED_FOLLOWING","FRAMEOPTION_END_UNBOUNDED_FOLLOWING","FRAMEOPTION_START_CURRENT_ROW","FRAMEOPTION_END_CURRENT_ROW","FRAMEOPTION_START_VALUE_PRECEDING","FRAMEOPTION_END_VALUE_PRECEDING","FRAMEOPTION_START_VALUE_FOLLOWING","FRAMEOPTION_END_VALUE_FOLLOWING","between","_this10","intervals","interval","part","mask","MASKS","BITS","invert","INTERVALS","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","INTERVAL_FULL_RANGE","query"],"sources":["../src/index.js"],"sourcesContent":["import _ from 'lodash';\nimport { format } from 'util';\n\nconst { keys } = _;\n\nconst compact = o => {\n  return _.filter(_.compact(o), (p) => {\n    if (p == null) {\n      return false;\n    }\n\n    return p.toString().length;\n  });\n};\n\nconst fail = (type, node) => {\n  throw new Error(format('Unhandled %s node: %s', type, JSON.stringify(node)));\n};\n\nconst parens = (string) => {\n  return '(' + string + ')';\n};\n\nconst indent = (text, count = 1) => text;\n\nexport default class Deparser {\n  static deparse(query) {\n    return new Deparser(query).deparseQuery();\n  }\n\n  constructor(tree) {\n    this.tree = tree;\n  }\n\n  deparseQuery() {\n    return (this.tree.map(node => this.deparse(node))).join('\\n\\n');\n  }\n\n  deparseNodes(nodes, context) {\n    return nodes.map(node => this.deparse(node, context));\n  }\n\n  list(nodes, separator = ', ') {\n    if (!nodes) {\n      return '';\n    }\n\n    return this.deparseNodes(nodes).join(separator);\n  }\n\n  quote(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (_.isArray(value)) {\n      return value.map(o => this.quote(o));\n    }\n\n    return '\"' + value + '\"';\n  }\n\n  // SELECT encode(E'''123\\\\000\\\\001', 'base64')\n  escape(literal) {\n    return \"'\" + literal.replace(/'/g, \"''\") + \"'\";\n  }\n\n  convertTypeName(typeName, size) {\n    switch (typeName) {\n      case 'bpchar':\n        if (size != null) {\n          return 'char';\n        }\n        // return `pg_catalog.bpchar` below so that the following is symmetric\n        // SELECT char 'c' = char 'c' AS true\n        return 'pg_catalog.bpchar';\n      case 'varchar':\n        return 'varchar';\n      case 'numeric':\n        return 'numeric';\n      case 'bool':\n        return 'boolean';\n      case 'int2':\n        return 'smallint';\n      case 'int4':\n        return 'int';\n      case 'int8':\n        return 'bigint';\n      case 'real': case 'float4':\n        return 'real';\n      case 'float8':\n        return 'pg_catalog.float8';\n      case 'text':\n        // SELECT EXTRACT(CENTURY FROM CURRENT_DATE)>=21 AS True\n        return 'pg_catalog.text';\n      case 'date':\n        return 'pg_catalog.date';\n      case 'time':\n        return 'time';\n      case 'timetz':\n        return 'pg_catalog.timetz';\n      case 'timestamp':\n        return 'timestamp';\n      case 'timestamptz':\n        return 'pg_catalog.timestamptz';\n      case 'interval':\n        return 'interval';\n      case 'bit':\n        return 'bit';\n      default:\n        throw new Error(format('Unhandled data type: %s', typeName));\n    }\n  }\n\n  type(names, args) {\n    const [ catalog, type ] = names.map(name => this.deparse(name));\n\n    const mods = (name, size) => {\n      if (size != null) {\n        return name + '(' + size + ')';\n      }\n\n      return name;\n    };\n\n    // handle the special \"char\" (in quotes) type\n    if (names[0].String.str === 'char') {\n      names[0].String.str = '\"char\"';\n    }\n\n    if (catalog !== 'pg_catalog') {\n      return mods(this.list(names, '.'), args);\n    }\n\n    const res = this.convertTypeName(type, args);\n\n    return mods(res, args);\n  }\n\n  deparse(item, context) {\n    if (item == null) {\n      return null;\n    }\n\n    if (_.isNumber(item)) {\n      return item;\n    }\n\n    const type = keys(item)[0];\n    const node = _.values(item)[0];\n\n    if (this[type] == null) {\n      throw new Error(type + ' is not implemented');\n    }\n\n    return this[type](node, context);\n  }\n\n  ['A_Expr'](node, context) {\n    const output = [];\n\n    switch (node.kind) {\n      case 0: // AEXPR_OP\n        if (node.lexpr) {\n          output.push(parens(this.deparse(node.lexpr)));\n        }\n\n        if (node.name.length > 1) {\n          const schema = this.deparse(node.name[0]);\n          const operator = this.deparse(node.name[1]);\n          output.push(`OPERATOR(${schema}.${operator})`);\n        } else {\n          output.push(this.deparse(node.name[0]));\n        }\n\n        if (node.rexpr) {\n          output.push(parens(this.deparse(node.rexpr)));\n        }\n\n        if (output.length === 2) {\n          return parens(output.join(''));\n        }\n\n        return parens(output.join(' '));\n\n      case 1: // AEXPR_OP_ANY\n        output.push(this.deparse(node.lexpr));\n        output.push(format('ANY (%s)', this.deparse(node.rexpr)));\n        return output.join(` ${this.deparse(node.name[0])} `);\n\n      case 2: // AEXPR_OP_ALL\n        output.push(this.deparse(node.lexpr));\n        output.push(format('ALL (%s)', this.deparse(node.rexpr)));\n        return output.join(` ${this.deparse(node.name[0])} `);\n\n      case 3: // AEXPR_DISTINCT\n        return format('%s IS DISTINCT FROM %s', this.deparse(node.lexpr), this.deparse(node.rexpr));\n\n      case 4: // AEXPR_NULLIF\n        return format('NULLIF(%s, %s)', this.deparse(node.lexpr), this.deparse(node.rexpr));\n\n      case 5: { // AEXPR_OF\n        const op = node.name[0].String.str === '=' ? 'IS OF' : 'IS NOT OF';\n        return format('%s %s (%s)', this.deparse(node.lexpr), op, this.list(node.rexpr));\n      }\n\n      case 6: { // AEXPR_IN\n        const operator = node.name[0].String.str === '=' ? 'IN' : 'NOT IN';\n\n        return format('%s %s (%s)', this.deparse(node.lexpr), operator, this.list(node.rexpr));\n      }\n\n      case 7: // AEXPR_LIKE\n        output.push(this.deparse(node.lexpr));\n\n        if (node.name[0].String.str === '!~~') {\n          output.push(format('NOT LIKE (%s)', this.deparse(node.rexpr)));\n        } else {\n          output.push(format('LIKE (%s)', this.deparse(node.rexpr)));\n        }\n\n        return output.join(' ');\n\n      case 8: // AEXPR_ILIKE\n        output.push(this.deparse(node.lexpr));\n\n        if (node.name[0].String.str === '!~~*') {\n          output.push(format('NOT ILIKE (%s)', this.deparse(node.rexpr)));\n        } else {\n          output.push(format('ILIKE (%s)', this.deparse(node.rexpr)));\n        }\n\n        return output.join(' ');\n\n      case 9: // AEXPR_SIMILAR\n        // SIMILAR TO emits a similar_escape FuncCall node with the first argument\n        output.push(this.deparse(node.lexpr));\n\n        if (this.deparse(node.rexpr.FuncCall.args[1].Null)) {\n          output.push(format('SIMILAR TO %s', this.deparse(node.rexpr.FuncCall.args[0])));\n        } else {\n          output.push(format('SIMILAR TO %s ESCAPE %s',\n                             this.deparse(node.rexpr.FuncCall.args[0]),\n                             this.deparse(node.rexpr.FuncCall.args[1])));\n        }\n\n        return output.join(' ');\n\n      case 10: // AEXPR_BETWEEN TODO(zhm) untested\n        output.push(this.deparse(node.lexpr));\n        output.push(format('BETWEEN %s AND %s', this.deparse(node.rexpr[0]), this.deparse(node.rexpr[1])));\n        return output.join(' ');\n\n      case 11: // AEXPR_NOT_BETWEEN TODO(zhm) untested\n        output.push(this.deparse(node.lexpr));\n        output.push(format('NOT BETWEEN %s AND %s', this.deparse(node.rexpr[0]), this.deparse(node.rexpr[1])));\n        return output.join(' ');\n\n      default:\n        return fail('A_Expr', node);\n    }\n  }\n\n  ['Alias'](node, context) {\n    const name = node.aliasname;\n\n    const output = [ 'AS' ];\n\n    if (node.colnames) {\n      output.push(name + parens(this.list(node.colnames)));\n    } else {\n      output.push(this.quote(name));\n    }\n\n    return output.join(' ');\n  }\n\n  ['A_ArrayExpr'](node) {\n    return format('ARRAY[%s]', this.list(node.elements));\n  }\n\n  ['A_Const'](node, context) {\n    if (node.val.String) {\n      return this.escape(this.deparse(node.val, context));\n    }\n\n    return this.deparse(node.val, context);\n  }\n\n  ['A_Indices'](node) {\n    if (node.lidx) {\n      return format('[%s:%s]', this.deparse(node.lidx), this.deparse(node.uidx));\n    }\n\n    return format('[%s]', this.deparse(node.uidx));\n  }\n\n  ['A_Indirection'](node) {\n    const output = [ `(${this.deparse(node.arg)})` ];\n\n    // TODO(zhm) figure out the actual rules for when a '.' is needed\n    //\n    // select a.b[0] from a;\n    // select (select row(1)).*\n    // select c2[2].f2 from comptable\n    // select c2.a[2].f2[1].f3[0].a1 from comptable\n\n    for (let i = 0; i < node.indirection.length; i++) {\n      const subnode = node.indirection[i];\n\n      if (subnode.String || subnode.A_Star) {\n        const value = subnode.A_Star ? '*' : this.quote(subnode.String.str);\n\n        output.push(`.${value}`);\n      } else {\n        output.push(this.deparse(subnode));\n      }\n    }\n\n    return output.join('');\n  }\n\n  ['A_Star'](node, context) {\n    return '*';\n  }\n\n  ['BitString'](node) {\n    const prefix = node.str[0];\n    return `${prefix}'${node.str.substring(1)}'`;\n  }\n\n  ['BoolExpr'](node) {\n    switch (node.boolop) {\n      case 0:\n        return parens(this.list(node.args, ' AND '));\n      case 1:\n        return parens(this.list(node.args, ' OR '));\n      case 2:\n        return format('NOT (%s)', this.deparse(node.args[0]));\n      default:\n        return fail('BoolExpr', node);\n    }\n  }\n\n  ['BooleanTest'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.arg));\n\n    const tests = [\n      'IS TRUE',\n      'IS NOT TRUE',\n      'IS FALSE',\n      'IS NOT FALSE',\n      'IS UNKNOWN',\n      'IS NOT UNKNOWN'\n    ];\n\n    output.push(tests[node.booltesttype]);\n\n    return output.join(' ');\n  }\n\n  ['CaseExpr'](node) {\n    const output = [ 'CASE' ];\n\n    if (node.arg) {\n      output.push(this.deparse(node.arg));\n    }\n\n    for (let i = 0; i < node.args.length; i++) {\n      output.push(this.deparse(node.args[i]));\n    }\n\n    if (node.defresult) {\n      output.push('ELSE');\n      output.push(this.deparse(node.defresult));\n    }\n\n    output.push('END');\n\n    return output.join(' ');\n  }\n\n  ['CoalesceExpr'](node) {\n    return format('COALESCE(%s)', this.list(node.args));\n  }\n\n  ['CollateClause'](node) {\n    const output = [];\n\n    if (node.arg) {\n      output.push(this.deparse(node.arg));\n    }\n\n    output.push('COLLATE');\n\n    if (node.collname) {\n      output.push(this.quote(this.deparseNodes(node.collname)));\n    }\n\n    return output.join(' ');\n  }\n\n  ['ColumnDef'](node) {\n    const output = [ this.quote(node.colname) ];\n\n    output.push(this.deparse(node.typeName));\n\n    if (node.raw_default) {\n      output.push('USING');\n      output.push(this.deparse(node.raw_default));\n    }\n\n    if (node.constraints) {\n      output.push(this.list(node.constraints, ' '));\n    }\n\n    return _.compact(output).join(' ');\n  }\n\n  ['ColumnRef'](node) {\n    const fields = node.fields.map(field => {\n      if (field.String) {\n        return this.quote(this.deparse(field));\n      }\n\n      return this.deparse(field);\n    });\n\n    return fields.join('.');\n  }\n\n  ['CommonTableExpr'](node) {\n    const output = [];\n\n    output.push(node.ctename);\n\n    if (node.aliascolnames) {\n      output.push(format('(%s)', this.quote(this.deparseNodes(node.aliascolnames))));\n    }\n\n    output.push(format('AS (%s)', this.deparse(node.ctequery)));\n\n    return output.join(' ');\n  }\n\n  ['DefElem'](node) {\n    if (node.defname === 'transaction_isolation') {\n      return format('ISOLATION LEVEL %s', node.arg.A_Const.val.String.str.toUpperCase());\n    }\n\n    if (node.defname === 'transaction_read_only') {\n      return node.arg.A_Const.val.Integer.ival === 0 ? 'READ WRITE' : 'READ ONLY';\n    }\n\n    if (node.defname === 'transaction_deferrable') {\n      return node.arg.A_Const.val.Integer.ival === 0 ? 'NOT DEFERRABLE' : 'DEFERRABLE';\n    }\n  }\n\n  ['Float'](node) {\n    // wrap negative numbers in parens, SELECT (-2147483648)::int4 * (-1)::int4\n    if (node.str[0] === '-') {\n      return `(${node.str})`;\n    }\n\n    return node.str;\n  }\n\n  ['FuncCall'](node, context) {\n    const output = [];\n\n    let params = [];\n\n    if (node.args) {\n      params = node.args.map(item => {\n        return this.deparse(item);\n      });\n    }\n\n    // COUNT(*)\n    if (node.agg_star) {\n      params.push('*');\n    }\n\n    const name = this.list(node.funcname, '.');\n\n    const order = [];\n\n    const withinGroup = node.agg_within_group;\n\n    if (node.agg_order) {\n      order.push('ORDER BY');\n      order.push(this.list(node.agg_order, ', '));\n    }\n\n    const call = [];\n\n    call.push(name + '(');\n\n    if (node.agg_distinct) {\n      call.push('DISTINCT ');\n    }\n\n    // prepend variadic before the last parameter\n    // SELECT CONCAT('|', VARIADIC ARRAY['1','2','3'])\n    if (node.func_variadic) {\n      params[params.length - 1] = 'VARIADIC ' + params[params.length - 1];\n    }\n\n    call.push(params.join(', '));\n\n    if (order.length && !withinGroup) {\n      call.push(' ');\n      call.push(order.join(' '));\n    }\n\n    call.push(')');\n\n    output.push(compact(call).join(''));\n\n    if (order.length && withinGroup) {\n      output.push('WITHIN GROUP');\n      output.push(parens(order.join(' ')));\n    }\n\n    if (node.agg_filter != null) {\n      output.push(format('FILTER (WHERE %s)', this.deparse(node.agg_filter)));\n    }\n\n    if (node.over != null) {\n      output.push(format('OVER %s', this.deparse(node.over)));\n    }\n\n    return output.join(' ');\n  }\n\n  ['GroupingFunc'](node) {\n    return 'GROUPING(' + this.list(node.args) + ')';\n  }\n\n  ['GroupingSet'](node) {\n    switch (node.kind) {\n      case 0: // GROUPING_SET_EMPTY\n        return '()';\n\n      case 1: // GROUPING_SET_SIMPLE\n        return fail('GroupingSet', node);\n\n      case 2: // GROUPING_SET_ROLLUP\n        return 'ROLLUP (' + this.list(node.content) + ')';\n\n      case 3: // GROUPING_SET_CUBE\n        return 'CUBE (' + this.list(node.content) + ')';\n\n      case 4: // GROUPING_SET_SETS\n        return 'GROUPING SETS (' + this.list(node.content) + ')';\n\n      default:\n        return fail('GroupingSet', node);\n    }\n  }\n\n  ['Integer'](node, context) {\n    if (node.ival < 0 && context !== 'simple') {\n      return `(${node.ival})`;\n    }\n\n    return node.ival.toString();\n  }\n\n  ['IntoClause'](node) {\n    return this.deparse(node.rel);\n  }\n\n  ['JoinExpr'](node, context) {\n    const output = [];\n\n    output.push(this.deparse(node.larg));\n\n    if (node.isNatural) {\n      output.push('NATURAL');\n    }\n\n    let join = null;\n\n    switch (true) {\n      case node.jointype === 0 && (node.quals != null):\n        join = 'INNER JOIN';\n        break;\n\n      case node.jointype === 0 && !node.isNatural && !(node.quals != null) && !(node.usingClause != null):\n        join = 'CROSS JOIN';\n        break;\n\n      case node.jointype === 0:\n        join = 'JOIN';\n        break;\n\n      case node.jointype === 1:\n        join = 'LEFT OUTER JOIN';\n        break;\n\n      case node.jointype === 2:\n        join = 'FULL OUTER JOIN';\n        break;\n\n      case node.jointype === 3:\n        join = 'RIGHT OUTER JOIN';\n        break;\n\n      default:\n        fail('JoinExpr', node);\n        break;\n    }\n\n    output.push(join);\n\n    if (node.rarg) {\n      // wrap nested join expressions in parens to make the following symmetric:\n      // select * from int8_tbl x cross join (int4_tbl x cross join lateral (select x.f1) ss)\n      if ((node.rarg.JoinExpr != null) && !(node.rarg.JoinExpr.alias != null)) {\n        output.push(`(${this.deparse(node.rarg)})`);\n      } else {\n        output.push(this.deparse(node.rarg));\n      }\n    }\n\n    if (node.quals) {\n      output.push(`ON ${this.deparse(node.quals)}`);\n    }\n\n    if (node.usingClause) {\n      const using = this.quote(this.deparseNodes(node.usingClause)).join(', ');\n\n      output.push(`USING (${using})`);\n    }\n\n    const wrapped =\n      (node.rarg.JoinExpr != null) || node.alias ? '(' + output.join(' ') + ')'\n                                                 : output.join(' ');\n\n    if (node.alias) {\n      return wrapped + ' ' + this.deparse(node.alias);\n    }\n\n    return wrapped;\n  }\n\n  ['LockingClause'](node) {\n    const strengths = [\n      'NONE', // LCS_NONE\n      'FOR KEY SHARE',\n      'FOR SHARE',\n      'FOR NO KEY UPDATE',\n      'FOR UPDATE'\n    ];\n\n    const output = [];\n\n    output.push(strengths[node.strength]);\n\n    if (node.lockedRels) {\n      output.push('OF');\n      output.push(this.list(node.lockedRels));\n    }\n\n    return output.join(' ');\n  }\n\n  ['MinMaxExpr'](node) {\n    const output = [];\n\n    if (node.op === 0) {\n      output.push('GREATEST');\n    } else {\n      output.push('LEAST');\n    }\n\n    output.push(parens(this.list(node.args)));\n\n    return output.join('');\n  }\n\n  ['NamedArgExpr'](node) {\n    const output = [];\n\n    output.push(node.name);\n    output.push(':=');\n    output.push(this.deparse(node.arg));\n\n    return output.join(' ');\n  }\n\n  ['Null'](node) {\n    return 'NULL';\n  }\n\n  ['NullTest'](node) {\n    const output = [ this.deparse(node.arg) ];\n\n    if (node.nulltesttype === 0) {\n      output.push('IS NULL');\n    } else if (node.nulltesttype === 1) {\n      output.push('IS NOT NULL');\n    }\n\n    return output.join(' ');\n  }\n\n  ['ParamRef'](node) {\n    if (node.number >= 0) {\n      return [ '$', node.number ].join('');\n    }\n    return '?';\n  }\n\n  ['RangeFunction'](node) {\n    const output = [];\n\n    if (node.lateral) {\n      output.push('LATERAL');\n    }\n\n    const funcs = [];\n\n    for (let i = 0; i < node.functions.length; i++) {\n      const funcCall = node.functions[i];\n      const call = [ this.deparse(funcCall[0]) ];\n\n      if (funcCall[1] && funcCall[1].length) {\n        call.push(format('AS (%s)', this.list(funcCall[1])));\n      }\n\n      funcs.push(call.join(' '));\n    }\n\n    const calls = funcs.join(', ');\n\n    if (node.is_rowsfrom) {\n      output.push(`ROWS FROM (${calls})`);\n    } else {\n      output.push(calls);\n    }\n\n    if (node.ordinality) {\n      output.push('WITH ORDINALITY');\n    }\n\n    if (node.alias) {\n      output.push(this.deparse(node.alias));\n    }\n\n    if (node.coldeflist) {\n      const defList = this.list(node.coldeflist);\n\n      if (!node.alias) {\n        output.push(` AS (${defList})`);\n      } else {\n        output.push(`(${defList})`);\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  ['RangeSubselect'](node, context) {\n    let output = '';\n\n    if (node.lateral) {\n      output += 'LATERAL ';\n    }\n\n    output += parens(this.deparse(node.subquery));\n\n    if (node.alias) {\n      return output + ' ' + this.deparse(node.alias);\n    }\n\n    return output;\n  }\n\n  ['RangeTableSample'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.relation));\n    output.push('TABLESAMPLE');\n    output.push(this.deparse(node.method[0]));\n\n    if (node.args) {\n      output.push(parens(this.list(node.args)));\n    }\n\n    if (node.repeatable) {\n      output.push('REPEATABLE(' + this.deparse(node.repeatable) + ')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['RangeVar'](node, context) {\n    const output = [];\n\n    if (node.inhOpt === 0) {\n      output.push('ONLY');\n    }\n\n    if (node.relpersistence === 'u') {\n      output.push('UNLOGGED');\n    }\n\n    if (node.relpersistence === 't') {\n      output.push('TEMPORARY');\n    }\n\n    if (node.schemaname != null) {\n      output.push(this.quote(node.schemaname));\n      output.push('.');\n    }\n\n    output.push(this.quote(node.relname));\n\n    if (node.alias) {\n      output.push(this.deparse(node.alias));\n    }\n\n    return output.join(' ');\n  }\n\n  ['ResTarget'](node, context) {\n    if (context === 'select') {\n      return compact([ this.deparse(node.val), this.quote(node.name) ]).join(' AS ');\n    } else if (context === 'update') {\n      return compact([ node.name, this.deparse(node.val) ]).join(' = ');\n    } else if (!(node.val != null)) {\n      return this.quote(node.name);\n    }\n\n    return fail('ResTarget', node);\n  }\n\n  ['RowExpr'](node) {\n    if (node.row_format === 2) {\n      return parens(this.list(node.args));\n    }\n\n    return format('ROW(%s)', this.list(node.args));\n  }\n\n  ['SelectStmt'](node, context) {\n    const output = [];\n\n    if (node.withClause) {\n      output.push(this.deparse(node.withClause));\n    }\n\n    if (node.op === 0) {\n      // VALUES select's don't get SELECT\n      if (node.valuesLists == null) {\n        output.push('SELECT');\n      }\n    } else {\n      output.push(parens(this.deparse(node.larg)));\n\n      const sets = [\n        'NONE',\n        'UNION',\n        'INTERSECT',\n        'EXCEPT'\n      ];\n\n      output.push(sets[node.op]);\n\n      if (node.all) {\n        output.push('ALL');\n      }\n\n      output.push(parens(this.deparse(node.rarg)));\n    }\n\n    if (node.distinctClause) {\n      if (node.distinctClause[0] != null) {\n        output.push('DISTINCT ON');\n\n        const clause = (node.distinctClause.map(e => this.deparse(e, 'select'))).join(',\\n');\n\n        output.push(`(${clause})`);\n      } else {\n        output.push('DISTINCT');\n      }\n    }\n\n    if (node.targetList) {\n      output.push(indent((node.targetList.map(e => this.deparse(e, 'select'))).join(',\\n')));\n    }\n\n    if (node.intoClause) {\n      output.push('INTO');\n      output.push(indent(this.deparse(node.intoClause)));\n    }\n\n    if (node.fromClause) {\n      output.push('FROM');\n      output.push(indent((node.fromClause.map(e => this.deparse(e, 'from'))).join(',\\n')));\n    }\n\n    if (node.whereClause) {\n      output.push('WHERE');\n      output.push(indent(this.deparse(node.whereClause)));\n    }\n\n    if (node.valuesLists) {\n      output.push('VALUES');\n\n      const lists = node.valuesLists.map(list => {\n        return `(${(list.map(v => this.deparse(v))).join(', ')})`;\n      });\n\n      output.push(lists.join(', '));\n    }\n\n    if (node.groupClause) {\n      output.push('GROUP BY');\n      output.push(indent((node.groupClause.map(e => this.deparse(e, 'group'))).join(',\\n')));\n    }\n\n    if (node.havingClause) {\n      output.push('HAVING');\n      output.push(indent(this.deparse(node.havingClause)));\n    }\n\n    if (node.windowClause) {\n      output.push('WINDOW');\n\n      const windows = [];\n\n      for (let i = 0; i < node.windowClause.length; i++) {\n        const w = node.windowClause[i];\n        const window = [];\n\n        if (w.WindowDef.name) {\n          window.push(this.quote(w.WindowDef.name) + ' AS');\n        }\n\n        window.push(parens(this.deparse(w, 'window')));\n\n        windows.push(window.join(' '));\n      }\n\n      output.push(windows.join(', '));\n    }\n\n    if (node.sortClause) {\n      output.push('ORDER BY');\n      output.push(indent((node.sortClause.map(e => this.deparse(e, 'sort'))).join(',\\n')));\n    }\n\n    if (node.limitCount) {\n      output.push('LIMIT');\n      output.push(indent(this.deparse(node.limitCount)));\n    }\n\n    if (node.limitOffset) {\n      output.push('OFFSET');\n      output.push(indent(this.deparse(node.limitOffset)));\n    }\n\n    if (node.lockingClause) {\n      node.lockingClause.forEach(item => {\n        return output.push(this.deparse(item));\n      });\n    }\n\n    return output.join(' ');\n  }\n\n  ['SortBy'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.node));\n\n    if (node.sortby_dir === 1) {\n      output.push('ASC');\n    }\n\n    if (node.sortby_dir === 2) {\n      output.push('DESC');\n    }\n\n    if (node.sortby_dir === 3) {\n      output.push(`USING ${this.deparseNodes(node.useOp)}`);\n    }\n\n    if (node.sortby_nulls === 1) {\n      output.push('NULLS FIRST');\n    }\n\n    if (node.sortby_nulls === 2) {\n      output.push('NULLS LAST');\n    }\n\n    return output.join(' ');\n  }\n\n  ['String'](node) {\n    return node.str;\n  }\n\n  ['SubLink'](node) {\n    switch (true) {\n      case node.subLinkType === 0:\n        return format('EXISTS (%s)', this.deparse(node.subselect));\n      case node.subLinkType === 1:\n        return format('%s %s ALL (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 2 && !(node.operName != null):\n        return format('%s IN (%s)', this.deparse(node.testexpr), this.deparse(node.subselect));\n      case node.subLinkType === 2:\n        return format('%s %s ANY (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 3:\n        return format('%s %s (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 4:\n        return format('(%s)', this.deparse(node.subselect));\n      case node.subLinkType === 5:\n        // TODO(zhm) what is this?\n        return fail('SubLink', node);\n        // MULTIEXPR_SUBLINK\n        // format('(%s)', @deparse(node.subselect))\n      case node.subLinkType === 6:\n        return format('ARRAY (%s)', this.deparse(node.subselect));\n      default:\n        return fail('SubLink', node);\n    }\n  }\n\n  ['TypeCast'](node) {\n    return this.deparse(node.arg) + '::' + this.deparse(node.typeName);\n  }\n\n  ['TypeName'](node) {\n    if (_.last(node.names).String.str === 'interval') {\n      return this.deparseInterval(node);\n    }\n\n    const output = [];\n\n    if (node.setof) {\n      output.push('SETOF');\n    }\n\n    let args = null;\n\n    if (node.typmods != null) {\n      args = node.typmods.map(item => {\n        return this.deparse(item);\n      });\n    }\n\n    const type = [];\n\n    type.push(this.type(node.names, args && args.join(', ')));\n\n    if (node.arrayBounds != null) {\n      type.push('[]');\n    }\n\n    output.push(type.join(''));\n\n    return output.join(' ');\n  }\n\n  ['CaseWhen'](node) {\n    const output = [ 'WHEN' ];\n\n    output.push(this.deparse(node.expr));\n    output.push('THEN');\n    output.push(this.deparse(node.result));\n\n    return output.join(' ');\n  }\n\n  ['VariableSetStmt'](node) {\n    if (node.kind === 4) {\n      return format('RESET %s', node.name);\n    }\n\n    if (node.kind === 3) {\n      const name = {\n        'TRANSACTION': 'TRANSACTION',\n        'SESSION CHARACTERISTICS': 'SESSION CHARACTERISTICS AS TRANSACTION'\n      }[node.name];\n\n      return format('SET %s %s',\n                    name,\n                    this.deparseNodes(node.args, 'simple').join(', '));\n    }\n\n    if (node.kind === 1) {\n      return format('SET %s TO DEFAULT', node.name);\n    }\n\n    return format('SET %s%s = %s',\n                  node.is_local ? 'LOCAL ' : '',\n                  node.name,\n                  this.deparseNodes(node.args, 'simple').join(', '));\n  }\n\n  ['VariableShowStmt'](node) {\n    return format('SHOW %s', node.name);\n  }\n\n  ['WindowDef'](node, context) {\n    const output = [];\n\n    if (context !== 'window') {\n      if (node.name) {\n        output.push(node.name);\n      }\n    }\n\n    const empty = (!(node.partitionClause != null) && !(node.orderClause != null));\n\n    const frameOptions = this.deparseFrameOptions(node.frameOptions, node.refname, node.startOffset, node.endOffset);\n\n    if (empty && context !== 'window' && !(node.name != null) && frameOptions.length === 0) {\n      return '()';\n    }\n\n    const windowParts = [];\n\n    let useParens = false;\n\n    if (node.partitionClause) {\n      const partition = [ 'PARTITION BY' ];\n\n      const clause = node.partitionClause.map(item => this.deparse(item));\n\n      partition.push(clause.join(', '));\n\n      windowParts.push(partition.join(' '));\n      useParens = true;\n    }\n\n    if (node.orderClause) {\n      windowParts.push('ORDER BY');\n\n      const orders = node.orderClause.map(item => {\n        return this.deparse(item);\n      });\n\n      windowParts.push(orders.join(', '));\n\n      useParens = true;\n    }\n\n    if (frameOptions.length) {\n      useParens = true;\n      windowParts.push(frameOptions);\n    }\n\n    if (useParens && context !== 'window') {\n      return output.join(' ') + ' (' + windowParts.join(' ') + ')';\n    }\n\n    return output.join(' ') + windowParts.join(' ');\n  }\n\n  ['WithClause'](node) {\n    const output = [ 'WITH' ];\n\n    if (node.recursive) {\n      output.push('RECURSIVE');\n    }\n\n    output.push(this.list(node.ctes));\n\n    return output.join(' ');\n  }\n\n  deparseFrameOptions(options, refName, startOffset, endOffset) {\n    const FRAMEOPTION_NONDEFAULT = 0x00001; // any specified?\n    const FRAMEOPTION_RANGE = 0x00002; // RANGE behavior\n    const FRAMEOPTION_ROWS = 0x00004; // ROWS behavior\n    const FRAMEOPTION_BETWEEN = 0x00008; // BETWEEN given?\n    const FRAMEOPTION_START_UNBOUNDED_PRECEDING = 0x00010; // start is U. P.\n    const FRAMEOPTION_END_UNBOUNDED_PRECEDING = 0x00020; // (disallowed)\n    const FRAMEOPTION_START_UNBOUNDED_FOLLOWING = 0x00040; // (disallowed)\n    const FRAMEOPTION_END_UNBOUNDED_FOLLOWING = 0x00080; // end is U. F.\n    const FRAMEOPTION_START_CURRENT_ROW = 0x00100; // start is C. R.\n    const FRAMEOPTION_END_CURRENT_ROW = 0x00200; // end is C. R.\n    const FRAMEOPTION_START_VALUE_PRECEDING = 0x00400; // start is V. P.\n    const FRAMEOPTION_END_VALUE_PRECEDING = 0x00800; // end is V. P.\n    const FRAMEOPTION_START_VALUE_FOLLOWING = 0x01000; // start is V. F.\n    const FRAMEOPTION_END_VALUE_FOLLOWING = 0x02000; // end is V. F.\n\n    if (!(options & FRAMEOPTION_NONDEFAULT)) {\n      return '';\n    }\n\n    const output = [];\n\n    if (refName != null) {\n      output.push(refName);\n    }\n\n    if (options & FRAMEOPTION_RANGE) {\n      output.push('RANGE');\n    }\n\n    if (options & FRAMEOPTION_ROWS) {\n      output.push('ROWS');\n    }\n\n    const between = options & FRAMEOPTION_BETWEEN;\n\n    if (between) {\n      output.push('BETWEEN');\n    }\n\n    if (options & FRAMEOPTION_START_UNBOUNDED_PRECEDING) {\n      output.push('UNBOUNDED PRECEDING');\n    }\n\n    if (options & FRAMEOPTION_START_UNBOUNDED_FOLLOWING) {\n      output.push('UNBOUNDED FOLLOWING');\n    }\n\n    if (options & FRAMEOPTION_START_CURRENT_ROW) {\n      output.push('CURRENT ROW');\n    }\n\n    if (options & FRAMEOPTION_START_VALUE_PRECEDING) {\n      output.push(this.deparse(startOffset) + ' PRECEDING');\n    }\n\n    if (options & FRAMEOPTION_START_VALUE_FOLLOWING) {\n      output.push(this.deparse(startOffset) + ' FOLLOWING');\n    }\n\n    if (between) {\n      output.push('AND');\n\n      if (options & FRAMEOPTION_END_UNBOUNDED_PRECEDING) {\n        output.push('UNBOUNDED PRECEDING');\n      }\n\n      if (options & FRAMEOPTION_END_UNBOUNDED_FOLLOWING) {\n        output.push('UNBOUNDED FOLLOWING');\n      }\n\n      if (options & FRAMEOPTION_END_CURRENT_ROW) {\n        output.push('CURRENT ROW');\n      }\n\n      if (options & FRAMEOPTION_END_VALUE_PRECEDING) {\n        output.push(this.deparse(endOffset) + ' PRECEDING');\n      }\n\n      if (options & FRAMEOPTION_END_VALUE_FOLLOWING) {\n        output.push(this.deparse(endOffset) + ' FOLLOWING');\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  deparseInterval(node) {\n    const type = [ 'interval' ];\n\n    if (node.arrayBounds != null) {\n      type.push('[]');\n    }\n\n    if (node.typmods) {\n      const typmods = node.typmods.map(item => this.deparse(item));\n\n      let intervals = this.interval(typmods[0]);\n\n      // SELECT interval(0) '1 day 01:23:45.6789'\n      if (node.typmods[0] && node.typmods[0].A_Const && node.typmods[0].A_Const.val.Integer.ival === 32767 && node.typmods[1] && (node.typmods[1].A_Const != null)) {\n        intervals = [ `(${node.typmods[1].A_Const.val.Integer.ival})` ];\n      } else {\n        intervals = intervals.map(part => {\n          if (part === 'second' && typmods.length === 2) {\n            return 'second(' + _.last(typmods) + ')';\n          }\n\n          return part;\n        });\n      }\n\n      type.push(intervals.join(' to '));\n    }\n\n    return type.join(' ');\n  }\n\n  interval(mask) {\n    // ported from https://github.com/lfittl/pg_query/blob/master/lib/pg_query/deparse/interval.rb\n    if (this.MASKS == null) {\n      this.MASKS = {\n        0: 'RESERV',\n        1: 'MONTH',\n        2: 'YEAR',\n        3: 'DAY',\n        4: 'JULIAN',\n        5: 'TZ',\n        6: 'DTZ',\n        7: 'DYNTZ',\n        8: 'IGNORE_DTF',\n        9: 'AMPM',\n        10: 'HOUR',\n        11: 'MINUTE',\n        12: 'SECOND',\n        13: 'MILLISECOND',\n        14: 'MICROSECOND',\n        15: 'DOY',\n        16: 'DOW',\n        17: 'UNITS',\n        18: 'ADBC',\n        19: 'AGO',\n        20: 'ABS_BEFORE',\n        21: 'ABS_AFTER',\n        22: 'ISODATE',\n        23: 'ISOTIME',\n        24: 'WEEK',\n        25: 'DECADE',\n        26: 'CENTURY',\n        27: 'MILLENNIUM',\n        28: 'DTZMOD'\n      };\n    }\n\n    if (this.BITS == null) {\n      this.BITS = _.invert(this.MASKS);\n    }\n\n    if (this.INTERVALS == null) {\n      this.INTERVALS = {};\n      this.INTERVALS[(1 << this.BITS.YEAR)] = [ 'year' ];\n      this.INTERVALS[(1 << this.BITS.MONTH)] = [ 'month' ];\n      this.INTERVALS[(1 << this.BITS.DAY)] = [ 'day' ];\n      this.INTERVALS[(1 << this.BITS.HOUR)] = [ 'hour' ];\n      this.INTERVALS[(1 << this.BITS.MINUTE)] = [ 'minute' ];\n      this.INTERVALS[(1 << this.BITS.SECOND)] = [ 'second' ];\n      this.INTERVALS[(1 << this.BITS.YEAR | 1 << this.BITS.MONTH)] = [ 'year', 'month' ];\n      this.INTERVALS[(1 << this.BITS.DAY | 1 << this.BITS.HOUR)] = [ 'day', 'hour' ];\n      this.INTERVALS[(1 << this.BITS.DAY | 1 << this.BITS.HOUR | 1 << this.BITS.MINUTE)] = [ 'day', 'minute' ];\n      this.INTERVALS[(1 << this.BITS.DAY | 1 << this.BITS.HOUR | 1 << this.BITS.MINUTE | 1 << this.BITS.SECOND)] = [ 'day', 'second' ];\n      this.INTERVALS[(1 << this.BITS.HOUR | 1 << this.BITS.MINUTE)] = [ 'hour', 'minute' ];\n      this.INTERVALS[(1 << this.BITS.HOUR | 1 << this.BITS.MINUTE | 1 << this.BITS.SECOND)] = [ 'hour', 'second' ];\n      this.INTERVALS[(1 << this.BITS.MINUTE | 1 << this.BITS.SECOND)] = [ 'minute', 'second' ];\n\n      // utils/timestamp.h\n      // #define INTERVAL_FULL_RANGE (0x7FFF)\n      this.INTERVALS[this.INTERVAL_FULL_RANGE = '32767'] = [];\n    }\n\n    return this.INTERVALS[mask.toString()];\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAA8B,SAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,eAAAC,CAAA,cAAAC,SAAA,OAAAD,CAAA;AAAA,SAAAE,eAAAF,CAAA,EAAAT,CAAA,WAAAY,eAAA,CAAAH,CAAA,KAAAI,qBAAA,CAAAJ,CAAA,EAAAT,CAAA,KAAAc,2BAAA,CAAAL,CAAA,EAAAT,CAAA,KAAAe,gBAAA;AAAA,SAAAA,iBAAA,cAAAL,SAAA;AAAA,SAAAI,4BAAAL,CAAA,EAAAO,CAAA,QAAAP,CAAA,2BAAAA,CAAA,SAAAQ,iBAAA,CAAAR,CAAA,EAAAO,CAAA,OAAAE,CAAA,MAAAC,QAAA,CAAAC,IAAA,CAAAX,CAAA,EAAAY,KAAA,6BAAAH,CAAA,IAAAT,CAAA,CAAAH,WAAA,KAAAY,CAAA,GAAAT,CAAA,CAAAH,WAAA,CAAAgB,IAAA,aAAAJ,CAAA,cAAAA,CAAA,GAAAK,KAAA,CAAAC,IAAA,CAAAf,CAAA,oBAAAS,CAAA,+CAAAO,IAAA,CAAAP,CAAA,IAAAD,iBAAA,CAAAR,CAAA,EAAAO,CAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAO,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAP,CAAA,CAAAiB,MAAA,MAAAV,CAAA,GAAAP,CAAA,CAAAiB,MAAA,YAAA1B,CAAA,MAAA2B,CAAA,GAAAJ,KAAA,CAAAP,CAAA,GAAAhB,CAAA,GAAAgB,CAAA,EAAAhB,CAAA,IAAA2B,CAAA,CAAA3B,CAAA,IAAAS,CAAA,CAAAT,CAAA,UAAA2B,CAAA;AAAA,SAAAd,sBAAAJ,CAAA,EAAAmB,CAAA,QAAAV,CAAA,WAAAT,CAAA,gCAAAL,MAAA,IAAAK,CAAA,CAAAL,MAAA,CAAAC,QAAA,KAAAI,CAAA,4BAAAS,CAAA,QAAAlB,CAAA,EAAA2B,CAAA,EAAAE,CAAA,EAAAC,CAAA,EAAAd,CAAA,OAAAe,CAAA,OAAA5B,CAAA,iBAAA0B,CAAA,IAAAX,CAAA,GAAAA,CAAA,CAAAE,IAAA,CAAAX,CAAA,GAAAuB,IAAA,QAAAJ,CAAA,QAAAK,MAAA,CAAAf,CAAA,MAAAA,CAAA,UAAAa,CAAA,uBAAAA,CAAA,IAAA/B,CAAA,GAAA6B,CAAA,CAAAT,IAAA,CAAAF,CAAA,GAAAgB,IAAA,MAAAlB,CAAA,CAAAmB,IAAA,CAAAnC,CAAA,CAAAoC,KAAA,GAAApB,CAAA,CAAAU,MAAA,KAAAE,CAAA,GAAAG,CAAA,iBAAAtB,CAAA,IAAAN,CAAA,OAAAwB,CAAA,GAAAlB,CAAA,yBAAAsB,CAAA,YAAAb,CAAA,eAAAY,CAAA,GAAAZ,CAAA,cAAAe,MAAA,CAAAH,CAAA,MAAAA,CAAA,2BAAA3B,CAAA,QAAAwB,CAAA,aAAAX,CAAA;AAAA,SAAAJ,gBAAAH,CAAA,QAAAc,KAAA,CAAAc,OAAA,CAAA5B,CAAA,UAAAA,CAAA;AAAA,SAAA6B,gBAAAtB,CAAA,EAAAW,CAAA,UAAAX,CAAA,YAAAW,CAAA,aAAAjB,SAAA;AAAA,SAAA6B,kBAAAvC,CAAA,EAAAS,CAAA,aAAAS,CAAA,MAAAA,CAAA,GAAAT,CAAA,CAAAiB,MAAA,EAAAR,CAAA,UAAAf,CAAA,GAAAM,CAAA,CAAAS,CAAA,GAAAf,CAAA,CAAAqC,UAAA,GAAArC,CAAA,CAAAqC,UAAA,QAAArC,CAAA,CAAAsC,YAAA,kBAAAtC,CAAA,KAAAA,CAAA,CAAAuC,QAAA,QAAAT,MAAA,CAAAU,cAAA,CAAA3C,CAAA,EAAA4C,cAAA,CAAAzC,CAAA,CAAA0C,GAAA,GAAA1C,CAAA;AAAA,SAAA2C,aAAA9C,CAAA,EAAAS,CAAA,EAAAS,CAAA,WAAAT,CAAA,IAAA8B,iBAAA,CAAAvC,CAAA,CAAAO,SAAA,EAAAE,CAAA,GAAAS,CAAA,IAAAqB,iBAAA,CAAAvC,CAAA,EAAAkB,CAAA,GAAAe,MAAA,CAAAU,cAAA,CAAA3C,CAAA,iBAAA0C,QAAA,SAAA1C,CAAA;AAAA,SAAA4C,eAAA1B,CAAA,QAAAW,CAAA,GAAAkB,YAAA,CAAA7B,CAAA,gCAAAhB,OAAA,CAAA2B,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAkB,aAAA7B,CAAA,EAAAT,CAAA,oBAAAP,OAAA,CAAAgB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAlB,CAAA,GAAAkB,CAAA,CAAAd,MAAA,CAAA4C,WAAA,kBAAAhD,CAAA,QAAA6B,CAAA,GAAA7B,CAAA,CAAAoB,IAAA,CAAAF,CAAA,EAAAT,CAAA,gCAAAP,OAAA,CAAA2B,CAAA,UAAAA,CAAA,YAAAnB,SAAA,yEAAAD,CAAA,GAAAwC,MAAA,GAAAC,MAAA,EAAAhC,CAAA;AAE9B,IAAQiC,IAAI,GAAKC,kBAAC,CAAVD,IAAI;AAEZ,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAGlD,CAAC,EAAI;EACnB,OAAOiD,kBAAC,CAACE,MAAM,CAACF,kBAAC,CAACC,OAAO,CAAClD,CAAC,CAAC,EAAE,UAACoD,CAAC,EAAK;IACnC,IAAIA,CAAC,IAAI,IAAI,EAAE;MACb,OAAO,KAAK;IACd;IAEA,OAAOA,CAAC,CAACpC,QAAQ,CAAC,CAAC,CAACO,MAAM;EAC5B,CAAC,CAAC;AACJ,CAAC;AAED,IAAM8B,IAAI,GAAG,SAAPA,IAAIA,CAAIC,IAAI,EAAEC,IAAI,EAAK;EAC3B,MAAM,IAAIC,KAAK,CAAC,IAAAC,YAAM,EAAC,uBAAuB,EAAEH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC;AAC9E,CAAC;AAED,IAAMK,MAAM,GAAG,SAATA,MAAMA,CAAIC,MAAM,EAAK;EACzB,OAAO,GAAG,GAAGA,MAAM,GAAG,GAAG;AAC3B,CAAC;AAED,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIC,IAAI;EAAA,IAAEC,KAAK,GAAAC,SAAA,CAAA1C,MAAA,QAAA0C,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC;EAAA,OAAKF,IAAI;AAAA;AAAC,IAEpBI,QAAQ,GAAAC,OAAA;EAK3B,SAAAD,SAAYE,IAAI,EAAE;IAAAlC,eAAA,OAAAgC,QAAA;IAChB,IAAI,CAACE,IAAI,GAAGA,IAAI;EAClB;EAAC,OAAA1B,YAAA,CAAAwB,QAAA;IAAAzB,GAAA;IAAAT,KAAA,EAED,SAAAqC,YAAYA,CAAA,EAAG;MAAA,IAAAC,KAAA;MACb,OAAQ,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,UAAAjB,IAAI;QAAA,OAAIgB,KAAI,CAACE,OAAO,CAAClB,IAAI,CAAC;MAAA,EAAC,CAAEmB,IAAI,CAAC,MAAM,CAAC;IACjE;EAAC;IAAAhC,GAAA;IAAAT,KAAA,EAED,SAAA0C,YAAYA,CAACC,KAAK,EAAEC,OAAO,EAAE;MAAA,IAAAC,MAAA;MAC3B,OAAOF,KAAK,CAACJ,GAAG,CAAC,UAAAjB,IAAI;QAAA,OAAIuB,MAAI,CAACL,OAAO,CAAClB,IAAI,EAAEsB,OAAO,CAAC;MAAA,EAAC;IACvD;EAAC;IAAAnC,GAAA;IAAAT,KAAA,EAED,SAAA8C,IAAIA,CAACH,KAAK,EAAoB;MAAA,IAAlBI,SAAS,GAAAf,SAAA,CAAA1C,MAAA,QAAA0C,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;MAC1B,IAAI,CAACW,KAAK,EAAE;QACV,OAAO,EAAE;MACX;MAEA,OAAO,IAAI,CAACD,YAAY,CAACC,KAAK,CAAC,CAACF,IAAI,CAACM,SAAS,CAAC;IACjD;EAAC;IAAAtC,GAAA;IAAAT,KAAA,EAED,SAAAgD,KAAKA,CAAChD,KAAK,EAAE;MAAA,IAAAiD,MAAA;MACX,IAAIjD,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,IAAI;MACb;MAEA,IAAIgB,kBAAC,CAACf,OAAO,CAACD,KAAK,CAAC,EAAE;QACpB,OAAOA,KAAK,CAACuC,GAAG,CAAC,UAAAxE,CAAC;UAAA,OAAIkF,MAAI,CAACD,KAAK,CAACjF,CAAC,CAAC;QAAA,EAAC;MACtC;MAEA,OAAO,GAAG,GAAGiC,KAAK,GAAG,GAAG;IAC1B;;IAEA;EAAA;IAAAS,GAAA;IAAAT,KAAA,EACA,SAAAkD,MAAMA,CAACC,OAAO,EAAE;MACd,OAAO,GAAG,GAAGA,OAAO,CAACC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG;IAChD;EAAC;IAAA3C,GAAA;IAAAT,KAAA,EAED,SAAAqD,eAAeA,CAACC,QAAQ,EAAEC,IAAI,EAAE;MAC9B,QAAQD,QAAQ;QACd,KAAK,QAAQ;UACX,IAAIC,IAAI,IAAI,IAAI,EAAE;YAChB,OAAO,MAAM;UACf;UACA;UACA;UACA,OAAO,mBAAmB;QAC5B,KAAK,SAAS;UACZ,OAAO,SAAS;QAClB,KAAK,SAAS;UACZ,OAAO,SAAS;QAClB,KAAK,MAAM;UACT,OAAO,SAAS;QAClB,KAAK,MAAM;UACT,OAAO,UAAU;QACnB,KAAK,MAAM;UACT,OAAO,KAAK;QACd,KAAK,MAAM;UACT,OAAO,QAAQ;QACjB,KAAK,MAAM;QAAE,KAAK,QAAQ;UACxB,OAAO,MAAM;QACf,KAAK,QAAQ;UACX,OAAO,mBAAmB;QAC5B,KAAK,MAAM;UACT;UACA,OAAO,iBAAiB;QAC1B,KAAK,MAAM;UACT,OAAO,iBAAiB;QAC1B,KAAK,MAAM;UACT,OAAO,MAAM;QACf,KAAK,QAAQ;UACX,OAAO,mBAAmB;QAC5B,KAAK,WAAW;UACd,OAAO,WAAW;QACpB,KAAK,aAAa;UAChB,OAAO,wBAAwB;QACjC,KAAK,UAAU;UACb,OAAO,UAAU;QACnB,KAAK,KAAK;UACR,OAAO,KAAK;QACd;UACE,MAAM,IAAIhC,KAAK,CAAC,IAAAC,YAAM,EAAC,yBAAyB,EAAE8B,QAAQ,CAAC,CAAC;MAChE;IACF;EAAC;IAAA7C,GAAA;IAAAT,KAAA,EAED,SAAAqB,IAAIA,CAACmC,KAAK,EAAEC,IAAI,EAAE;MAAA,IAAAC,MAAA;MAChB,IAAAC,UAAA,GAA0BH,KAAK,CAACjB,GAAG,CAAC,UAAArD,IAAI;UAAA,OAAIwE,MAAI,CAAClB,OAAO,CAACtD,IAAI,CAAC;QAAA,EAAC;QAAA0E,WAAA,GAAArF,cAAA,CAAAoF,UAAA;QAAvDE,OAAO,GAAAD,WAAA;QAAEvC,IAAI,GAAAuC,WAAA;MAErB,IAAME,IAAI,GAAG,SAAPA,IAAIA,CAAI5E,IAAI,EAAEqE,IAAI,EAAK;QAC3B,IAAIA,IAAI,IAAI,IAAI,EAAE;UAChB,OAAOrE,IAAI,GAAG,GAAG,GAAGqE,IAAI,GAAG,GAAG;QAChC;QAEA,OAAOrE,IAAI;MACb,CAAC;;MAED;MACA,IAAIsE,KAAK,CAAC,CAAC,CAAC,CAAC3C,MAAM,CAACkD,GAAG,KAAK,MAAM,EAAE;QAClCP,KAAK,CAAC,CAAC,CAAC,CAAC3C,MAAM,CAACkD,GAAG,GAAG,QAAQ;MAChC;MAEA,IAAIF,OAAO,KAAK,YAAY,EAAE;QAC5B,OAAOC,IAAI,CAAC,IAAI,CAAChB,IAAI,CAACU,KAAK,EAAE,GAAG,CAAC,EAAEC,IAAI,CAAC;MAC1C;MAEA,IAAMO,GAAG,GAAG,IAAI,CAACX,eAAe,CAAChC,IAAI,EAAEoC,IAAI,CAAC;MAE5C,OAAOK,IAAI,CAACE,GAAG,EAAEP,IAAI,CAAC;IACxB;EAAC;IAAAhD,GAAA;IAAAT,KAAA,EAED,SAAAwC,OAAOA,CAACyB,IAAI,EAAErB,OAAO,EAAE;MACrB,IAAIqB,IAAI,IAAI,IAAI,EAAE;QAChB,OAAO,IAAI;MACb;MAEA,IAAIjD,kBAAC,CAACkD,QAAQ,CAACD,IAAI,CAAC,EAAE;QACpB,OAAOA,IAAI;MACb;MAEA,IAAM5C,IAAI,GAAGN,IAAI,CAACkD,IAAI,CAAC,CAAC,CAAC,CAAC;MAC1B,IAAM3C,IAAI,GAAGN,kBAAC,CAACmD,MAAM,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;MAE9B,IAAI,IAAI,CAAC5C,IAAI,CAAC,IAAI,IAAI,EAAE;QACtB,MAAM,IAAIE,KAAK,CAACF,IAAI,GAAG,qBAAqB,CAAC;MAC/C;MAEA,OAAO,IAAI,CAACA,IAAI,CAAC,CAACC,IAAI,EAAEsB,OAAO,CAAC;IAClC;EAAC;IAAAnC,GAAA,EAEA,QAAQ;IAAAT,KAAA,EAAT,SAACoE,MAAQA,CAAE9C,IAAI,EAAEsB,OAAO,EAAE;MACxB,IAAMyB,MAAM,GAAG,EAAE;MAEjB,QAAQ/C,IAAI,CAACgD,IAAI;QACf,KAAK,CAAC;UAAE;UACN,IAAIhD,IAAI,CAACiD,KAAK,EAAE;YACdF,MAAM,CAACtE,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACa,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,CAAC,CAAC;UAC/C;UAEA,IAAIjD,IAAI,CAACpC,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;YACxB,IAAMkF,MAAM,GAAG,IAAI,CAAChC,OAAO,CAAClB,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzC,IAAMuF,QAAQ,GAAG,IAAI,CAACjC,OAAO,CAAClB,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3CmF,MAAM,CAACtE,IAAI,aAAA2E,MAAA,CAAaF,MAAM,OAAAE,MAAA,CAAID,QAAQ,MAAG,CAAC;UAChD,CAAC,MAAM;YACLJ,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;UACzC;UAEA,IAAIoC,IAAI,CAACqD,KAAK,EAAE;YACdN,MAAM,CAACtE,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACa,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC;UAC/C;UAEA,IAAIN,MAAM,CAAC/E,MAAM,KAAK,CAAC,EAAE;YACvB,OAAOqC,MAAM,CAAC0C,MAAM,CAAC5B,IAAI,CAAC,EAAE,CAAC,CAAC;UAChC;UAEA,OAAOd,MAAM,CAAC0C,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC,CAAC;QAEjC,KAAK,CAAC;UAAE;UACN4B,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,CAAC;UACrCF,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,UAAU,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC;UACzD,OAAON,MAAM,CAAC5B,IAAI,KAAAiC,MAAA,CAAK,IAAI,CAAClC,OAAO,CAAClB,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAG,CAAC;QAEvD,KAAK,CAAC;UAAE;UACNmF,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,CAAC;UACrCF,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,UAAU,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC;UACzD,OAAON,MAAM,CAAC5B,IAAI,KAAAiC,MAAA,CAAK,IAAI,CAAClC,OAAO,CAAClB,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAG,CAAC;QAEvD,KAAK,CAAC;UAAE;UACN,OAAO,IAAAsC,YAAM,EAAC,wBAAwB,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,EAAE,IAAI,CAAC/B,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC;QAE7F,KAAK,CAAC;UAAE;UACN,OAAO,IAAAnD,YAAM,EAAC,gBAAgB,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,EAAE,IAAI,CAAC/B,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC;QAErF,KAAK,CAAC;UAAE;YAAE;YACR,IAAMC,EAAE,GAAGtD,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC2B,MAAM,CAACkD,GAAG,KAAK,GAAG,GAAG,OAAO,GAAG,WAAW;YAClE,OAAO,IAAAvC,YAAM,EAAC,YAAY,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,EAAEK,EAAE,EAAE,IAAI,CAAC9B,IAAI,CAACxB,IAAI,CAACqD,KAAK,CAAC,CAAC;UAClF;QAEA,KAAK,CAAC;UAAE;YAAE;YACR,IAAMF,SAAQ,GAAGnD,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC2B,MAAM,CAACkD,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,QAAQ;YAElE,OAAO,IAAAvC,YAAM,EAAC,YAAY,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,EAAEE,SAAQ,EAAE,IAAI,CAAC3B,IAAI,CAACxB,IAAI,CAACqD,KAAK,CAAC,CAAC;UACxF;QAEA,KAAK,CAAC;UAAE;UACNN,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,CAAC;UAErC,IAAIjD,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC2B,MAAM,CAACkD,GAAG,KAAK,KAAK,EAAE;YACrCM,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,eAAe,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC;UAChE,CAAC,MAAM;YACLN,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,WAAW,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC;UAC5D;UAEA,OAAON,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;QAEzB,KAAK,CAAC;UAAE;UACN4B,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,CAAC;UAErC,IAAIjD,IAAI,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC2B,MAAM,CAACkD,GAAG,KAAK,MAAM,EAAE;YACtCM,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,gBAAgB,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC;UACjE,CAAC,MAAM;YACLN,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,YAAY,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC;UAC7D;UAEA,OAAON,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;QAEzB,KAAK,CAAC;UAAE;UACN;UACA4B,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,CAAC;UAErC,IAAI,IAAI,CAAC/B,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAACE,QAAQ,CAACpB,IAAI,CAAC,CAAC,CAAC,CAACqB,IAAI,CAAC,EAAE;YAClDT,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,eAAe,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAACE,QAAQ,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACjF,CAAC,MAAM;YACLY,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,yBAAyB,EACzB,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAACE,QAAQ,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC,EACzC,IAAI,CAACjB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAACE,QAAQ,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAChE;UAEA,OAAOY,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;QAEzB,KAAK,EAAE;UAAE;UACP4B,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,CAAC;UACrCF,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,mBAAmB,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACnC,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClG,OAAON,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;QAEzB,KAAK,EAAE;UAAE;UACP4B,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiD,KAAK,CAAC,CAAC;UACrCF,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,uBAAuB,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACnC,OAAO,CAAClB,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtG,OAAON,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;QAEzB;UACE,OAAOrB,IAAI,CAAC,QAAQ,EAAEE,IAAI,CAAC;MAC/B;IACF;EAAC;IAAAb,GAAA,EAEA,OAAO;IAAAT,KAAA,EAAR,SAAC+E,KAAOA,CAAEzD,IAAI,EAAEsB,OAAO,EAAE;MACvB,IAAM1D,IAAI,GAAGoC,IAAI,CAAC0D,SAAS;MAE3B,IAAMX,MAAM,GAAG,CAAE,IAAI,CAAE;MAEvB,IAAI/C,IAAI,CAAC2D,QAAQ,EAAE;QACjBZ,MAAM,CAACtE,IAAI,CAACb,IAAI,GAAGyC,MAAM,CAAC,IAAI,CAACmB,IAAI,CAACxB,IAAI,CAAC2D,QAAQ,CAAC,CAAC,CAAC;MACtD,CAAC,MAAM;QACLZ,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACiD,KAAK,CAAC9D,IAAI,CAAC,CAAC;MAC/B;MAEA,OAAOmF,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,aAAa;IAAAT,KAAA,EAAd,SAACkF,WAAaA,CAAE5D,IAAI,EAAE;MACpB,OAAO,IAAAE,YAAM,EAAC,WAAW,EAAE,IAAI,CAACsB,IAAI,CAACxB,IAAI,CAAC6D,QAAQ,CAAC,CAAC;IACtD;EAAC;IAAA1E,GAAA,EAEA,SAAS;IAAAT,KAAA,EAAV,SAACoF,OAASA,CAAE9D,IAAI,EAAEsB,OAAO,EAAE;MACzB,IAAItB,IAAI,CAAC+D,GAAG,CAACxE,MAAM,EAAE;QACnB,OAAO,IAAI,CAACqC,MAAM,CAAC,IAAI,CAACV,OAAO,CAAClB,IAAI,CAAC+D,GAAG,EAAEzC,OAAO,CAAC,CAAC;MACrD;MAEA,OAAO,IAAI,CAACJ,OAAO,CAAClB,IAAI,CAAC+D,GAAG,EAAEzC,OAAO,CAAC;IACxC;EAAC;IAAAnC,GAAA,EAEA,WAAW;IAAAT,KAAA,EAAZ,SAACsF,SAAWA,CAAEhE,IAAI,EAAE;MAClB,IAAIA,IAAI,CAACiE,IAAI,EAAE;QACb,OAAO,IAAA/D,YAAM,EAAC,SAAS,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACiE,IAAI,CAAC,EAAE,IAAI,CAAC/C,OAAO,CAAClB,IAAI,CAACkE,IAAI,CAAC,CAAC;MAC5E;MAEA,OAAO,IAAAhE,YAAM,EAAC,MAAM,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACkE,IAAI,CAAC,CAAC;IAChD;EAAC;IAAA/E,GAAA,EAEA,eAAe;IAAAT,KAAA,EAAhB,SAACyF,aAAeA,CAAEnE,IAAI,EAAE;MACtB,IAAM+C,MAAM,GAAG,KAAAK,MAAA,CAAM,IAAI,CAAClC,OAAO,CAAClB,IAAI,CAACoE,GAAG,CAAC,OAAK;;MAEhD;MACA;MACA;MACA;MACA;MACA;;MAEA,KAAK,IAAIjG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6B,IAAI,CAACqE,WAAW,CAACrG,MAAM,EAAEG,CAAC,EAAE,EAAE;QAChD,IAAMmG,OAAO,GAAGtE,IAAI,CAACqE,WAAW,CAAClG,CAAC,CAAC;QAEnC,IAAImG,OAAO,CAAC/E,MAAM,IAAI+E,OAAO,CAACC,MAAM,EAAE;UACpC,IAAM7F,KAAK,GAAG4F,OAAO,CAACC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC7C,KAAK,CAAC4C,OAAO,CAAC/E,MAAM,CAACkD,GAAG,CAAC;UAEnEM,MAAM,CAACtE,IAAI,KAAA2E,MAAA,CAAK1E,KAAK,CAAE,CAAC;QAC1B,CAAC,MAAM;UACLqE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAACoD,OAAO,CAAC,CAAC;QACpC;MACF;MAEA,OAAOvB,MAAM,CAAC5B,IAAI,CAAC,EAAE,CAAC;IACxB;EAAC;IAAAhC,GAAA,EAEA,QAAQ;IAAAT,KAAA,EAAT,SAAC6F,MAAQA,CAAEvE,IAAI,EAAEsB,OAAO,EAAE;MACxB,OAAO,GAAG;IACZ;EAAC;IAAAnC,GAAA,EAEA,WAAW;IAAAT,KAAA,EAAZ,SAAC8F,SAAWA,CAAExE,IAAI,EAAE;MAClB,IAAMyE,MAAM,GAAGzE,IAAI,CAACyC,GAAG,CAAC,CAAC,CAAC;MAC1B,UAAAW,MAAA,CAAUqB,MAAM,OAAArB,MAAA,CAAIpD,IAAI,CAACyC,GAAG,CAACiC,SAAS,CAAC,CAAC,CAAC;IAC3C;EAAC;IAAAvF,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAACiG,QAAUA,CAAE3E,IAAI,EAAE;MACjB,QAAQA,IAAI,CAAC4E,MAAM;QACjB,KAAK,CAAC;UACJ,OAAOvE,MAAM,CAAC,IAAI,CAACmB,IAAI,CAACxB,IAAI,CAACmC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC9C,KAAK,CAAC;UACJ,OAAO9B,MAAM,CAAC,IAAI,CAACmB,IAAI,CAACxB,IAAI,CAACmC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC7C,KAAK,CAAC;UACJ,OAAO,IAAAjC,YAAM,EAAC,UAAU,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACmC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD;UACE,OAAOrC,IAAI,CAAC,UAAU,EAAEE,IAAI,CAAC;MACjC;IACF;EAAC;IAAAb,GAAA,EAEA,aAAa;IAAAT,KAAA,EAAd,SAACmG,WAAaA,CAAE7E,IAAI,EAAE;MACpB,IAAM+C,MAAM,GAAG,EAAE;MAEjBA,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACoE,GAAG,CAAC,CAAC;MAEnC,IAAMU,KAAK,GAAG,CACZ,SAAS,EACT,aAAa,EACb,UAAU,EACV,cAAc,EACd,YAAY,EACZ,gBAAgB,CACjB;MAED/B,MAAM,CAACtE,IAAI,CAACqG,KAAK,CAAC9E,IAAI,CAAC+E,YAAY,CAAC,CAAC;MAErC,OAAOhC,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAACsG,QAAUA,CAAEhF,IAAI,EAAE;MACjB,IAAM+C,MAAM,GAAG,CAAE,MAAM,CAAE;MAEzB,IAAI/C,IAAI,CAACoE,GAAG,EAAE;QACZrB,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACoE,GAAG,CAAC,CAAC;MACrC;MAEA,KAAK,IAAIjG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6B,IAAI,CAACmC,IAAI,CAACnE,MAAM,EAAEG,CAAC,EAAE,EAAE;QACzC4E,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACmC,IAAI,CAAChE,CAAC,CAAC,CAAC,CAAC;MACzC;MAEA,IAAI6B,IAAI,CAACiF,SAAS,EAAE;QAClBlC,MAAM,CAACtE,IAAI,CAAC,MAAM,CAAC;QACnBsE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiF,SAAS,CAAC,CAAC;MAC3C;MAEAlC,MAAM,CAACtE,IAAI,CAAC,KAAK,CAAC;MAElB,OAAOsE,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,cAAc;IAAAT,KAAA,EAAf,SAACwG,YAAcA,CAAElF,IAAI,EAAE;MACrB,OAAO,IAAAE,YAAM,EAAC,cAAc,EAAE,IAAI,CAACsB,IAAI,CAACxB,IAAI,CAACmC,IAAI,CAAC,CAAC;IACrD;EAAC;IAAAhD,GAAA,EAEA,eAAe;IAAAT,KAAA,EAAhB,SAACyG,aAAeA,CAAEnF,IAAI,EAAE;MACtB,IAAM+C,MAAM,GAAG,EAAE;MAEjB,IAAI/C,IAAI,CAACoE,GAAG,EAAE;QACZrB,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACoE,GAAG,CAAC,CAAC;MACrC;MAEArB,MAAM,CAACtE,IAAI,CAAC,SAAS,CAAC;MAEtB,IAAIuB,IAAI,CAACoF,QAAQ,EAAE;QACjBrC,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACiD,KAAK,CAAC,IAAI,CAACN,YAAY,CAACpB,IAAI,CAACoF,QAAQ,CAAC,CAAC,CAAC;MAC3D;MAEA,OAAOrC,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,WAAW;IAAAT,KAAA,EAAZ,SAAC2G,SAAWA,CAAErF,IAAI,EAAE;MAClB,IAAM+C,MAAM,GAAG,CAAE,IAAI,CAACrB,KAAK,CAAC1B,IAAI,CAACsF,OAAO,CAAC,CAAE;MAE3CvC,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACgC,QAAQ,CAAC,CAAC;MAExC,IAAIhC,IAAI,CAACuF,WAAW,EAAE;QACpBxC,MAAM,CAACtE,IAAI,CAAC,OAAO,CAAC;QACpBsE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACuF,WAAW,CAAC,CAAC;MAC7C;MAEA,IAAIvF,IAAI,CAACwF,WAAW,EAAE;QACpBzC,MAAM,CAACtE,IAAI,CAAC,IAAI,CAAC+C,IAAI,CAACxB,IAAI,CAACwF,WAAW,EAAE,GAAG,CAAC,CAAC;MAC/C;MAEA,OAAO9F,kBAAC,CAACC,OAAO,CAACoD,MAAM,CAAC,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACpC;EAAC;IAAAhC,GAAA,EAEA,WAAW;IAAAT,KAAA,EAAZ,SAAC+G,SAAWA,CAAEzF,IAAI,EAAE;MAAA,IAAA0F,MAAA;MAClB,IAAMC,MAAM,GAAG3F,IAAI,CAAC2F,MAAM,CAAC1E,GAAG,CAAC,UAAA2E,KAAK,EAAI;QACtC,IAAIA,KAAK,CAACrG,MAAM,EAAE;UAChB,OAAOmG,MAAI,CAAChE,KAAK,CAACgE,MAAI,CAACxE,OAAO,CAAC0E,KAAK,CAAC,CAAC;QACxC;QAEA,OAAOF,MAAI,CAACxE,OAAO,CAAC0E,KAAK,CAAC;MAC5B,CAAC,CAAC;MAEF,OAAOD,MAAM,CAACxE,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,iBAAiB;IAAAT,KAAA,EAAlB,SAACmH,eAAiBA,CAAE7F,IAAI,EAAE;MACxB,IAAM+C,MAAM,GAAG,EAAE;MAEjBA,MAAM,CAACtE,IAAI,CAACuB,IAAI,CAAC8F,OAAO,CAAC;MAEzB,IAAI9F,IAAI,CAAC+F,aAAa,EAAE;QACtBhD,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,MAAM,EAAE,IAAI,CAACwB,KAAK,CAAC,IAAI,CAACN,YAAY,CAACpB,IAAI,CAAC+F,aAAa,CAAC,CAAC,CAAC,CAAC;MAChF;MAEAhD,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,SAAS,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACgG,QAAQ,CAAC,CAAC,CAAC;MAE3D,OAAOjD,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,SAAS;IAAAT,KAAA,EAAV,SAACuH,OAASA,CAAEjG,IAAI,EAAE;MAChB,IAAIA,IAAI,CAACkG,OAAO,KAAK,uBAAuB,EAAE;QAC5C,OAAO,IAAAhG,YAAM,EAAC,oBAAoB,EAAEF,IAAI,CAACoE,GAAG,CAACN,OAAO,CAACC,GAAG,CAACxE,MAAM,CAACkD,GAAG,CAAC0D,WAAW,CAAC,CAAC,CAAC;MACpF;MAEA,IAAInG,IAAI,CAACkG,OAAO,KAAK,uBAAuB,EAAE;QAC5C,OAAOlG,IAAI,CAACoE,GAAG,CAACN,OAAO,CAACC,GAAG,CAACqC,OAAO,CAACC,IAAI,KAAK,CAAC,GAAG,YAAY,GAAG,WAAW;MAC7E;MAEA,IAAIrG,IAAI,CAACkG,OAAO,KAAK,wBAAwB,EAAE;QAC7C,OAAOlG,IAAI,CAACoE,GAAG,CAACN,OAAO,CAACC,GAAG,CAACqC,OAAO,CAACC,IAAI,KAAK,CAAC,GAAG,gBAAgB,GAAG,YAAY;MAClF;IACF;EAAC;IAAAlH,GAAA,EAEA,OAAO;IAAAT,KAAA,EAAR,SAAC4H,KAAOA,CAAEtG,IAAI,EAAE;MACd;MACA,IAAIA,IAAI,CAACyC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACvB,WAAAW,MAAA,CAAWpD,IAAI,CAACyC,GAAG;MACrB;MAEA,OAAOzC,IAAI,CAACyC,GAAG;IACjB;EAAC;IAAAtD,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAAC6E,QAAUA,CAAEvD,IAAI,EAAEsB,OAAO,EAAE;MAAA,IAAAiF,MAAA;MAC1B,IAAMxD,MAAM,GAAG,EAAE;MAEjB,IAAIyD,MAAM,GAAG,EAAE;MAEf,IAAIxG,IAAI,CAACmC,IAAI,EAAE;QACbqE,MAAM,GAAGxG,IAAI,CAACmC,IAAI,CAAClB,GAAG,CAAC,UAAA0B,IAAI,EAAI;UAC7B,OAAO4D,MAAI,CAACrF,OAAO,CAACyB,IAAI,CAAC;QAC3B,CAAC,CAAC;MACJ;;MAEA;MACA,IAAI3C,IAAI,CAACyG,QAAQ,EAAE;QACjBD,MAAM,CAAC/H,IAAI,CAAC,GAAG,CAAC;MAClB;MAEA,IAAMb,IAAI,GAAG,IAAI,CAAC4D,IAAI,CAACxB,IAAI,CAAC0G,QAAQ,EAAE,GAAG,CAAC;MAE1C,IAAMC,KAAK,GAAG,EAAE;MAEhB,IAAMC,WAAW,GAAG5G,IAAI,CAAC6G,gBAAgB;MAEzC,IAAI7G,IAAI,CAAC8G,SAAS,EAAE;QAClBH,KAAK,CAAClI,IAAI,CAAC,UAAU,CAAC;QACtBkI,KAAK,CAAClI,IAAI,CAAC,IAAI,CAAC+C,IAAI,CAACxB,IAAI,CAAC8G,SAAS,EAAE,IAAI,CAAC,CAAC;MAC7C;MAEA,IAAMpJ,IAAI,GAAG,EAAE;MAEfA,IAAI,CAACe,IAAI,CAACb,IAAI,GAAG,GAAG,CAAC;MAErB,IAAIoC,IAAI,CAAC+G,YAAY,EAAE;QACrBrJ,IAAI,CAACe,IAAI,CAAC,WAAW,CAAC;MACxB;;MAEA;MACA;MACA,IAAIuB,IAAI,CAACgH,aAAa,EAAE;QACtBR,MAAM,CAACA,MAAM,CAACxI,MAAM,GAAG,CAAC,CAAC,GAAG,WAAW,GAAGwI,MAAM,CAACA,MAAM,CAACxI,MAAM,GAAG,CAAC,CAAC;MACrE;MAEAN,IAAI,CAACe,IAAI,CAAC+H,MAAM,CAACrF,IAAI,CAAC,IAAI,CAAC,CAAC;MAE5B,IAAIwF,KAAK,CAAC3I,MAAM,IAAI,CAAC4I,WAAW,EAAE;QAChClJ,IAAI,CAACe,IAAI,CAAC,GAAG,CAAC;QACdf,IAAI,CAACe,IAAI,CAACkI,KAAK,CAACxF,IAAI,CAAC,GAAG,CAAC,CAAC;MAC5B;MAEAzD,IAAI,CAACe,IAAI,CAAC,GAAG,CAAC;MAEdsE,MAAM,CAACtE,IAAI,CAACkB,OAAO,CAACjC,IAAI,CAAC,CAACyD,IAAI,CAAC,EAAE,CAAC,CAAC;MAEnC,IAAIwF,KAAK,CAAC3I,MAAM,IAAI4I,WAAW,EAAE;QAC/B7D,MAAM,CAACtE,IAAI,CAAC,cAAc,CAAC;QAC3BsE,MAAM,CAACtE,IAAI,CAAC4B,MAAM,CAACsG,KAAK,CAACxF,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;MACtC;MAEA,IAAInB,IAAI,CAACiH,UAAU,IAAI,IAAI,EAAE;QAC3BlE,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,mBAAmB,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACiH,UAAU,CAAC,CAAC,CAAC;MACzE;MAEA,IAAIjH,IAAI,CAACkH,IAAI,IAAI,IAAI,EAAE;QACrBnE,MAAM,CAACtE,IAAI,CAAC,IAAAyB,YAAM,EAAC,SAAS,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACkH,IAAI,CAAC,CAAC,CAAC;MACzD;MAEA,OAAOnE,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,cAAc;IAAAT,KAAA,EAAf,SAACyI,YAAcA,CAAEnH,IAAI,EAAE;MACrB,OAAO,WAAW,GAAG,IAAI,CAACwB,IAAI,CAACxB,IAAI,CAACmC,IAAI,CAAC,GAAG,GAAG;IACjD;EAAC;IAAAhD,GAAA,EAEA,aAAa;IAAAT,KAAA,EAAd,SAAC0I,WAAaA,CAAEpH,IAAI,EAAE;MACpB,QAAQA,IAAI,CAACgD,IAAI;QACf,KAAK,CAAC;UAAE;UACN,OAAO,IAAI;QAEb,KAAK,CAAC;UAAE;UACN,OAAOlD,IAAI,CAAC,aAAa,EAAEE,IAAI,CAAC;QAElC,KAAK,CAAC;UAAE;UACN,OAAO,UAAU,GAAG,IAAI,CAACwB,IAAI,CAACxB,IAAI,CAACqH,OAAO,CAAC,GAAG,GAAG;QAEnD,KAAK,CAAC;UAAE;UACN,OAAO,QAAQ,GAAG,IAAI,CAAC7F,IAAI,CAACxB,IAAI,CAACqH,OAAO,CAAC,GAAG,GAAG;QAEjD,KAAK,CAAC;UAAE;UACN,OAAO,iBAAiB,GAAG,IAAI,CAAC7F,IAAI,CAACxB,IAAI,CAACqH,OAAO,CAAC,GAAG,GAAG;QAE1D;UACE,OAAOvH,IAAI,CAAC,aAAa,EAAEE,IAAI,CAAC;MACpC;IACF;EAAC;IAAAb,GAAA,EAEA,SAAS;IAAAT,KAAA,EAAV,SAAC0H,OAASA,CAAEpG,IAAI,EAAEsB,OAAO,EAAE;MACzB,IAAItB,IAAI,CAACqG,IAAI,GAAG,CAAC,IAAI/E,OAAO,KAAK,QAAQ,EAAE;QACzC,WAAA8B,MAAA,CAAWpD,IAAI,CAACqG,IAAI;MACtB;MAEA,OAAOrG,IAAI,CAACqG,IAAI,CAAC5I,QAAQ,CAAC,CAAC;IAC7B;EAAC;IAAA0B,GAAA,EAEA,YAAY;IAAAT,KAAA,EAAb,SAAC4I,UAAYA,CAAEtH,IAAI,EAAE;MACnB,OAAO,IAAI,CAACkB,OAAO,CAAClB,IAAI,CAACuH,GAAG,CAAC;IAC/B;EAAC;IAAApI,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAAC8I,QAAUA,CAAExH,IAAI,EAAEsB,OAAO,EAAE;MAC1B,IAAMyB,MAAM,GAAG,EAAE;MAEjBA,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACyH,IAAI,CAAC,CAAC;MAEpC,IAAIzH,IAAI,CAAC0H,SAAS,EAAE;QAClB3E,MAAM,CAACtE,IAAI,CAAC,SAAS,CAAC;MACxB;MAEA,IAAI0C,IAAI,GAAG,IAAI;MAEf,QAAQ,IAAI;QACV,KAAKnB,IAAI,CAAC2H,QAAQ,KAAK,CAAC,IAAK3H,IAAI,CAAC4H,KAAK,IAAI,IAAK;UAC9CzG,IAAI,GAAG,YAAY;UACnB;QAEF,KAAKnB,IAAI,CAAC2H,QAAQ,KAAK,CAAC,IAAI,CAAC3H,IAAI,CAAC0H,SAAS,IAAI,EAAE1H,IAAI,CAAC4H,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE5H,IAAI,CAAC6H,WAAW,IAAI,IAAI,CAAC;UACjG1G,IAAI,GAAG,YAAY;UACnB;QAEF,KAAKnB,IAAI,CAAC2H,QAAQ,KAAK,CAAC;UACtBxG,IAAI,GAAG,MAAM;UACb;QAEF,KAAKnB,IAAI,CAAC2H,QAAQ,KAAK,CAAC;UACtBxG,IAAI,GAAG,iBAAiB;UACxB;QAEF,KAAKnB,IAAI,CAAC2H,QAAQ,KAAK,CAAC;UACtBxG,IAAI,GAAG,iBAAiB;UACxB;QAEF,KAAKnB,IAAI,CAAC2H,QAAQ,KAAK,CAAC;UACtBxG,IAAI,GAAG,kBAAkB;UACzB;QAEF;UACErB,IAAI,CAAC,UAAU,EAAEE,IAAI,CAAC;UACtB;MACJ;MAEA+C,MAAM,CAACtE,IAAI,CAAC0C,IAAI,CAAC;MAEjB,IAAInB,IAAI,CAAC8H,IAAI,EAAE;QACb;QACA;QACA,IAAK9H,IAAI,CAAC8H,IAAI,CAACN,QAAQ,IAAI,IAAI,IAAK,EAAExH,IAAI,CAAC8H,IAAI,CAACN,QAAQ,CAACO,KAAK,IAAI,IAAI,CAAC,EAAE;UACvEhF,MAAM,CAACtE,IAAI,KAAA2E,MAAA,CAAK,IAAI,CAAClC,OAAO,CAAClB,IAAI,CAAC8H,IAAI,CAAC,MAAG,CAAC;QAC7C,CAAC,MAAM;UACL/E,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAAC8H,IAAI,CAAC,CAAC;QACtC;MACF;MAEA,IAAI9H,IAAI,CAAC4H,KAAK,EAAE;QACd7E,MAAM,CAACtE,IAAI,OAAA2E,MAAA,CAAO,IAAI,CAAClC,OAAO,CAAClB,IAAI,CAAC4H,KAAK,CAAC,CAAE,CAAC;MAC/C;MAEA,IAAI5H,IAAI,CAAC6H,WAAW,EAAE;QACpB,IAAMG,KAAK,GAAG,IAAI,CAACtG,KAAK,CAAC,IAAI,CAACN,YAAY,CAACpB,IAAI,CAAC6H,WAAW,CAAC,CAAC,CAAC1G,IAAI,CAAC,IAAI,CAAC;QAExE4B,MAAM,CAACtE,IAAI,WAAA2E,MAAA,CAAW4E,KAAK,MAAG,CAAC;MACjC;MAEA,IAAMC,OAAO,GACVjI,IAAI,CAAC8H,IAAI,CAACN,QAAQ,IAAI,IAAI,IAAKxH,IAAI,CAAC+H,KAAK,GAAG,GAAG,GAAGhF,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAC5B4B,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;MAE/D,IAAInB,IAAI,CAAC+H,KAAK,EAAE;QACd,OAAOE,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC/G,OAAO,CAAClB,IAAI,CAAC+H,KAAK,CAAC;MACjD;MAEA,OAAOE,OAAO;IAChB;EAAC;IAAA9I,GAAA,EAEA,eAAe;IAAAT,KAAA,EAAhB,SAACwJ,aAAeA,CAAElI,IAAI,EAAE;MACtB,IAAMmI,SAAS,GAAG,CAChB,MAAM;MAAE;MACR,eAAe,EACf,WAAW,EACX,mBAAmB,EACnB,YAAY,CACb;MAED,IAAMpF,MAAM,GAAG,EAAE;MAEjBA,MAAM,CAACtE,IAAI,CAAC0J,SAAS,CAACnI,IAAI,CAACoI,QAAQ,CAAC,CAAC;MAErC,IAAIpI,IAAI,CAACqI,UAAU,EAAE;QACnBtF,MAAM,CAACtE,IAAI,CAAC,IAAI,CAAC;QACjBsE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAAC+C,IAAI,CAACxB,IAAI,CAACqI,UAAU,CAAC,CAAC;MACzC;MAEA,OAAOtF,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,YAAY;IAAAT,KAAA,EAAb,SAAC4J,UAAYA,CAAEtI,IAAI,EAAE;MACnB,IAAM+C,MAAM,GAAG,EAAE;MAEjB,IAAI/C,IAAI,CAACsD,EAAE,KAAK,CAAC,EAAE;QACjBP,MAAM,CAACtE,IAAI,CAAC,UAAU,CAAC;MACzB,CAAC,MAAM;QACLsE,MAAM,CAACtE,IAAI,CAAC,OAAO,CAAC;MACtB;MAEAsE,MAAM,CAACtE,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACmB,IAAI,CAACxB,IAAI,CAACmC,IAAI,CAAC,CAAC,CAAC;MAEzC,OAAOY,MAAM,CAAC5B,IAAI,CAAC,EAAE,CAAC;IACxB;EAAC;IAAAhC,GAAA,EAEA,cAAc;IAAAT,KAAA,EAAf,SAAC6J,YAAcA,CAAEvI,IAAI,EAAE;MACrB,IAAM+C,MAAM,GAAG,EAAE;MAEjBA,MAAM,CAACtE,IAAI,CAACuB,IAAI,CAACpC,IAAI,CAAC;MACtBmF,MAAM,CAACtE,IAAI,CAAC,IAAI,CAAC;MACjBsE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACoE,GAAG,CAAC,CAAC;MAEnC,OAAOrB,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,MAAM;IAAAT,KAAA,EAAP,SAAC8E,IAAMA,CAAExD,IAAI,EAAE;MACb,OAAO,MAAM;IACf;EAAC;IAAAb,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAAC8J,QAAUA,CAAExI,IAAI,EAAE;MACjB,IAAM+C,MAAM,GAAG,CAAE,IAAI,CAAC7B,OAAO,CAAClB,IAAI,CAACoE,GAAG,CAAC,CAAE;MAEzC,IAAIpE,IAAI,CAACyI,YAAY,KAAK,CAAC,EAAE;QAC3B1F,MAAM,CAACtE,IAAI,CAAC,SAAS,CAAC;MACxB,CAAC,MAAM,IAAIuB,IAAI,CAACyI,YAAY,KAAK,CAAC,EAAE;QAClC1F,MAAM,CAACtE,IAAI,CAAC,aAAa,CAAC;MAC5B;MAEA,OAAOsE,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAACgK,QAAUA,CAAE1I,IAAI,EAAE;MACjB,IAAIA,IAAI,CAAC2I,MAAM,IAAI,CAAC,EAAE;QACpB,OAAO,CAAE,GAAG,EAAE3I,IAAI,CAAC2I,MAAM,CAAE,CAACxH,IAAI,CAAC,EAAE,CAAC;MACtC;MACA,OAAO,GAAG;IACZ;EAAC;IAAAhC,GAAA,EAEA,eAAe;IAAAT,KAAA,EAAhB,SAACkK,aAAeA,CAAE5I,IAAI,EAAE;MACtB,IAAM+C,MAAM,GAAG,EAAE;MAEjB,IAAI/C,IAAI,CAAC6I,OAAO,EAAE;QAChB9F,MAAM,CAACtE,IAAI,CAAC,SAAS,CAAC;MACxB;MAEA,IAAMqK,KAAK,GAAG,EAAE;MAEhB,KAAK,IAAI3K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6B,IAAI,CAAC+I,SAAS,CAAC/K,MAAM,EAAEG,CAAC,EAAE,EAAE;QAC9C,IAAM6K,QAAQ,GAAGhJ,IAAI,CAAC+I,SAAS,CAAC5K,CAAC,CAAC;QAClC,IAAMT,IAAI,GAAG,CAAE,IAAI,CAACwD,OAAO,CAAC8H,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;QAE1C,IAAIA,QAAQ,CAAC,CAAC,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC,CAAChL,MAAM,EAAE;UACrCN,IAAI,CAACe,IAAI,CAAC,IAAAyB,YAAM,EAAC,SAAS,EAAE,IAAI,CAACsB,IAAI,CAACwH,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD;QAEAF,KAAK,CAACrK,IAAI,CAACf,IAAI,CAACyD,IAAI,CAAC,GAAG,CAAC,CAAC;MAC5B;MAEA,IAAM8H,KAAK,GAAGH,KAAK,CAAC3H,IAAI,CAAC,IAAI,CAAC;MAE9B,IAAInB,IAAI,CAACkJ,WAAW,EAAE;QACpBnG,MAAM,CAACtE,IAAI,eAAA2E,MAAA,CAAe6F,KAAK,MAAG,CAAC;MACrC,CAAC,MAAM;QACLlG,MAAM,CAACtE,IAAI,CAACwK,KAAK,CAAC;MACpB;MAEA,IAAIjJ,IAAI,CAACmJ,UAAU,EAAE;QACnBpG,MAAM,CAACtE,IAAI,CAAC,iBAAiB,CAAC;MAChC;MAEA,IAAIuB,IAAI,CAAC+H,KAAK,EAAE;QACdhF,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAAC+H,KAAK,CAAC,CAAC;MACvC;MAEA,IAAI/H,IAAI,CAACoJ,UAAU,EAAE;QACnB,IAAMC,OAAO,GAAG,IAAI,CAAC7H,IAAI,CAACxB,IAAI,CAACoJ,UAAU,CAAC;QAE1C,IAAI,CAACpJ,IAAI,CAAC+H,KAAK,EAAE;UACfhF,MAAM,CAACtE,IAAI,SAAA2E,MAAA,CAASiG,OAAO,MAAG,CAAC;QACjC,CAAC,MAAM;UACLtG,MAAM,CAACtE,IAAI,KAAA2E,MAAA,CAAKiG,OAAO,MAAG,CAAC;QAC7B;MACF;MAEA,OAAOtG,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,gBAAgB;IAAAT,KAAA,EAAjB,SAAC4K,cAAgBA,CAAEtJ,IAAI,EAAEsB,OAAO,EAAE;MAChC,IAAIyB,MAAM,GAAG,EAAE;MAEf,IAAI/C,IAAI,CAAC6I,OAAO,EAAE;QAChB9F,MAAM,IAAI,UAAU;MACtB;MAEAA,MAAM,IAAI1C,MAAM,CAAC,IAAI,CAACa,OAAO,CAAClB,IAAI,CAACuJ,QAAQ,CAAC,CAAC;MAE7C,IAAIvJ,IAAI,CAAC+H,KAAK,EAAE;QACd,OAAOhF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC7B,OAAO,CAAClB,IAAI,CAAC+H,KAAK,CAAC;MAChD;MAEA,OAAOhF,MAAM;IACf;EAAC;IAAA5D,GAAA,EAEA,kBAAkB;IAAAT,KAAA,EAAnB,SAAC8K,gBAAkBA,CAAExJ,IAAI,EAAE;MACzB,IAAM+C,MAAM,GAAG,EAAE;MAEjBA,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACyJ,QAAQ,CAAC,CAAC;MACxC1G,MAAM,CAACtE,IAAI,CAAC,aAAa,CAAC;MAC1BsE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAAC0J,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAEzC,IAAI1J,IAAI,CAACmC,IAAI,EAAE;QACbY,MAAM,CAACtE,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACmB,IAAI,CAACxB,IAAI,CAACmC,IAAI,CAAC,CAAC,CAAC;MAC3C;MAEA,IAAInC,IAAI,CAAC2J,UAAU,EAAE;QACnB5G,MAAM,CAACtE,IAAI,CAAC,aAAa,GAAG,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAAC2J,UAAU,CAAC,GAAG,GAAG,CAAC;MAClE;MAEA,OAAO5G,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAACkL,QAAUA,CAAE5J,IAAI,EAAEsB,OAAO,EAAE;MAC1B,IAAMyB,MAAM,GAAG,EAAE;MAEjB,IAAI/C,IAAI,CAAC6J,MAAM,KAAK,CAAC,EAAE;QACrB9G,MAAM,CAACtE,IAAI,CAAC,MAAM,CAAC;MACrB;MAEA,IAAIuB,IAAI,CAAC8J,cAAc,KAAK,GAAG,EAAE;QAC/B/G,MAAM,CAACtE,IAAI,CAAC,UAAU,CAAC;MACzB;MAEA,IAAIuB,IAAI,CAAC8J,cAAc,KAAK,GAAG,EAAE;QAC/B/G,MAAM,CAACtE,IAAI,CAAC,WAAW,CAAC;MAC1B;MAEA,IAAIuB,IAAI,CAAC+J,UAAU,IAAI,IAAI,EAAE;QAC3BhH,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACiD,KAAK,CAAC1B,IAAI,CAAC+J,UAAU,CAAC,CAAC;QACxChH,MAAM,CAACtE,IAAI,CAAC,GAAG,CAAC;MAClB;MAEAsE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACiD,KAAK,CAAC1B,IAAI,CAACgK,OAAO,CAAC,CAAC;MAErC,IAAIhK,IAAI,CAAC+H,KAAK,EAAE;QACdhF,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAAC+H,KAAK,CAAC,CAAC;MACvC;MAEA,OAAOhF,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,WAAW;IAAAT,KAAA,EAAZ,SAACuL,SAAWA,CAAEjK,IAAI,EAAEsB,OAAO,EAAE;MAC3B,IAAIA,OAAO,KAAK,QAAQ,EAAE;QACxB,OAAO3B,OAAO,CAAC,CAAE,IAAI,CAACuB,OAAO,CAAClB,IAAI,CAAC+D,GAAG,CAAC,EAAE,IAAI,CAACrC,KAAK,CAAC1B,IAAI,CAACpC,IAAI,CAAC,CAAE,CAAC,CAACuD,IAAI,CAAC,MAAM,CAAC;MAChF,CAAC,MAAM,IAAIG,OAAO,KAAK,QAAQ,EAAE;QAC/B,OAAO3B,OAAO,CAAC,CAAEK,IAAI,CAACpC,IAAI,EAAE,IAAI,CAACsD,OAAO,CAAClB,IAAI,CAAC+D,GAAG,CAAC,CAAE,CAAC,CAAC5C,IAAI,CAAC,KAAK,CAAC;MACnE,CAAC,MAAM,IAAI,EAAEnB,IAAI,CAAC+D,GAAG,IAAI,IAAI,CAAC,EAAE;QAC9B,OAAO,IAAI,CAACrC,KAAK,CAAC1B,IAAI,CAACpC,IAAI,CAAC;MAC9B;MAEA,OAAOkC,IAAI,CAAC,WAAW,EAAEE,IAAI,CAAC;IAChC;EAAC;IAAAb,GAAA,EAEA,SAAS;IAAAT,KAAA,EAAV,SAACwL,OAASA,CAAElK,IAAI,EAAE;MAChB,IAAIA,IAAI,CAACmK,UAAU,KAAK,CAAC,EAAE;QACzB,OAAO9J,MAAM,CAAC,IAAI,CAACmB,IAAI,CAACxB,IAAI,CAACmC,IAAI,CAAC,CAAC;MACrC;MAEA,OAAO,IAAAjC,YAAM,EAAC,SAAS,EAAE,IAAI,CAACsB,IAAI,CAACxB,IAAI,CAACmC,IAAI,CAAC,CAAC;IAChD;EAAC;IAAAhD,GAAA,EAEA,YAAY;IAAAT,KAAA,EAAb,SAAC0L,UAAYA,CAAEpK,IAAI,EAAEsB,OAAO,EAAE;MAAA,IAAA+I,MAAA;MAC5B,IAAMtH,MAAM,GAAG,EAAE;MAEjB,IAAI/C,IAAI,CAACsK,UAAU,EAAE;QACnBvH,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACsK,UAAU,CAAC,CAAC;MAC5C;MAEA,IAAItK,IAAI,CAACsD,EAAE,KAAK,CAAC,EAAE;QACjB;QACA,IAAItD,IAAI,CAACuK,WAAW,IAAI,IAAI,EAAE;UAC5BxH,MAAM,CAACtE,IAAI,CAAC,QAAQ,CAAC;QACvB;MACF,CAAC,MAAM;QACLsE,MAAM,CAACtE,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACa,OAAO,CAAClB,IAAI,CAACyH,IAAI,CAAC,CAAC,CAAC;QAE5C,IAAM+C,IAAI,GAAG,CACX,MAAM,EACN,OAAO,EACP,WAAW,EACX,QAAQ,CACT;QAEDzH,MAAM,CAACtE,IAAI,CAAC+L,IAAI,CAACxK,IAAI,CAACsD,EAAE,CAAC,CAAC;QAE1B,IAAItD,IAAI,CAACyK,GAAG,EAAE;UACZ1H,MAAM,CAACtE,IAAI,CAAC,KAAK,CAAC;QACpB;QAEAsE,MAAM,CAACtE,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACa,OAAO,CAAClB,IAAI,CAAC8H,IAAI,CAAC,CAAC,CAAC;MAC9C;MAEA,IAAI9H,IAAI,CAAC0K,cAAc,EAAE;QACvB,IAAI1K,IAAI,CAAC0K,cAAc,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;UAClC3H,MAAM,CAACtE,IAAI,CAAC,aAAa,CAAC;UAE1B,IAAMkM,MAAM,GAAI3K,IAAI,CAAC0K,cAAc,CAACzJ,GAAG,CAAC,UAAA3E,CAAC;YAAA,OAAI+N,MAAI,CAACnJ,OAAO,CAAC5E,CAAC,EAAE,QAAQ,CAAC;UAAA,EAAC,CAAE6E,IAAI,CAAC,KAAK,CAAC;UAEpF4B,MAAM,CAACtE,IAAI,KAAA2E,MAAA,CAAKuH,MAAM,MAAG,CAAC;QAC5B,CAAC,MAAM;UACL5H,MAAM,CAACtE,IAAI,CAAC,UAAU,CAAC;QACzB;MACF;MAEA,IAAIuB,IAAI,CAAC4K,UAAU,EAAE;QACnB7H,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAEP,IAAI,CAAC4K,UAAU,CAAC3J,GAAG,CAAC,UAAA3E,CAAC;UAAA,OAAI+N,MAAI,CAACnJ,OAAO,CAAC5E,CAAC,EAAE,QAAQ,CAAC;QAAA,EAAC,CAAE6E,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;MACxF;MAEA,IAAInB,IAAI,CAAC6K,UAAU,EAAE;QACnB9H,MAAM,CAACtE,IAAI,CAAC,MAAM,CAAC;QACnBsE,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAC,IAAI,CAACW,OAAO,CAAClB,IAAI,CAAC6K,UAAU,CAAC,CAAC,CAAC;MACpD;MAEA,IAAI7K,IAAI,CAAC8K,UAAU,EAAE;QACnB/H,MAAM,CAACtE,IAAI,CAAC,MAAM,CAAC;QACnBsE,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAEP,IAAI,CAAC8K,UAAU,CAAC7J,GAAG,CAAC,UAAA3E,CAAC;UAAA,OAAI+N,MAAI,CAACnJ,OAAO,CAAC5E,CAAC,EAAE,MAAM,CAAC;QAAA,EAAC,CAAE6E,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;MACtF;MAEA,IAAInB,IAAI,CAAC+K,WAAW,EAAE;QACpBhI,MAAM,CAACtE,IAAI,CAAC,OAAO,CAAC;QACpBsE,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAC,IAAI,CAACW,OAAO,CAAClB,IAAI,CAAC+K,WAAW,CAAC,CAAC,CAAC;MACrD;MAEA,IAAI/K,IAAI,CAACuK,WAAW,EAAE;QACpBxH,MAAM,CAACtE,IAAI,CAAC,QAAQ,CAAC;QAErB,IAAMuM,KAAK,GAAGhL,IAAI,CAACuK,WAAW,CAACtJ,GAAG,CAAC,UAAAO,IAAI,EAAI;UACzC,WAAA4B,MAAA,CAAY5B,IAAI,CAACP,GAAG,CAAC,UAAAgK,CAAC;YAAA,OAAIZ,MAAI,CAACnJ,OAAO,CAAC+J,CAAC,CAAC;UAAA,EAAC,CAAE9J,IAAI,CAAC,IAAI,CAAC;QACxD,CAAC,CAAC;QAEF4B,MAAM,CAACtE,IAAI,CAACuM,KAAK,CAAC7J,IAAI,CAAC,IAAI,CAAC,CAAC;MAC/B;MAEA,IAAInB,IAAI,CAACkL,WAAW,EAAE;QACpBnI,MAAM,CAACtE,IAAI,CAAC,UAAU,CAAC;QACvBsE,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAEP,IAAI,CAACkL,WAAW,CAACjK,GAAG,CAAC,UAAA3E,CAAC;UAAA,OAAI+N,MAAI,CAACnJ,OAAO,CAAC5E,CAAC,EAAE,OAAO,CAAC;QAAA,EAAC,CAAE6E,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;MACxF;MAEA,IAAInB,IAAI,CAACmL,YAAY,EAAE;QACrBpI,MAAM,CAACtE,IAAI,CAAC,QAAQ,CAAC;QACrBsE,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAC,IAAI,CAACW,OAAO,CAAClB,IAAI,CAACmL,YAAY,CAAC,CAAC,CAAC;MACtD;MAEA,IAAInL,IAAI,CAACoL,YAAY,EAAE;QACrBrI,MAAM,CAACtE,IAAI,CAAC,QAAQ,CAAC;QAErB,IAAM4M,OAAO,GAAG,EAAE;QAElB,KAAK,IAAIlN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6B,IAAI,CAACoL,YAAY,CAACpN,MAAM,EAAEG,CAAC,EAAE,EAAE;UACjD,IAAMmN,CAAC,GAAGtL,IAAI,CAACoL,YAAY,CAACjN,CAAC,CAAC;UAC9B,IAAMoN,MAAM,GAAG,EAAE;UAEjB,IAAID,CAAC,CAACE,SAAS,CAAC5N,IAAI,EAAE;YACpB2N,MAAM,CAAC9M,IAAI,CAAC,IAAI,CAACiD,KAAK,CAAC4J,CAAC,CAACE,SAAS,CAAC5N,IAAI,CAAC,GAAG,KAAK,CAAC;UACnD;UAEA2N,MAAM,CAAC9M,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACa,OAAO,CAACoK,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;UAE9CD,OAAO,CAAC5M,IAAI,CAAC8M,MAAM,CAACpK,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC;QAEA4B,MAAM,CAACtE,IAAI,CAAC4M,OAAO,CAAClK,IAAI,CAAC,IAAI,CAAC,CAAC;MACjC;MAEA,IAAInB,IAAI,CAACyL,UAAU,EAAE;QACnB1I,MAAM,CAACtE,IAAI,CAAC,UAAU,CAAC;QACvBsE,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAEP,IAAI,CAACyL,UAAU,CAACxK,GAAG,CAAC,UAAA3E,CAAC;UAAA,OAAI+N,MAAI,CAACnJ,OAAO,CAAC5E,CAAC,EAAE,MAAM,CAAC;QAAA,EAAC,CAAE6E,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;MACtF;MAEA,IAAInB,IAAI,CAAC0L,UAAU,EAAE;QACnB3I,MAAM,CAACtE,IAAI,CAAC,OAAO,CAAC;QACpBsE,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAC,IAAI,CAACW,OAAO,CAAClB,IAAI,CAAC0L,UAAU,CAAC,CAAC,CAAC;MACpD;MAEA,IAAI1L,IAAI,CAAC2L,WAAW,EAAE;QACpB5I,MAAM,CAACtE,IAAI,CAAC,QAAQ,CAAC;QACrBsE,MAAM,CAACtE,IAAI,CAAC8B,MAAM,CAAC,IAAI,CAACW,OAAO,CAAClB,IAAI,CAAC2L,WAAW,CAAC,CAAC,CAAC;MACrD;MAEA,IAAI3L,IAAI,CAAC4L,aAAa,EAAE;QACtB5L,IAAI,CAAC4L,aAAa,CAACC,OAAO,CAAC,UAAAlJ,IAAI,EAAI;UACjC,OAAOI,MAAM,CAACtE,IAAI,CAAC4L,MAAI,CAACnJ,OAAO,CAACyB,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC;MACJ;MAEA,OAAOI,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,QAAQ;IAAAT,KAAA,EAAT,SAACoN,MAAQA,CAAE9L,IAAI,EAAE;MACf,IAAM+C,MAAM,GAAG,EAAE;MAEjBA,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACA,IAAI,CAAC,CAAC;MAEpC,IAAIA,IAAI,CAAC+L,UAAU,KAAK,CAAC,EAAE;QACzBhJ,MAAM,CAACtE,IAAI,CAAC,KAAK,CAAC;MACpB;MAEA,IAAIuB,IAAI,CAAC+L,UAAU,KAAK,CAAC,EAAE;QACzBhJ,MAAM,CAACtE,IAAI,CAAC,MAAM,CAAC;MACrB;MAEA,IAAIuB,IAAI,CAAC+L,UAAU,KAAK,CAAC,EAAE;QACzBhJ,MAAM,CAACtE,IAAI,UAAA2E,MAAA,CAAU,IAAI,CAAChC,YAAY,CAACpB,IAAI,CAACgM,KAAK,CAAC,CAAE,CAAC;MACvD;MAEA,IAAIhM,IAAI,CAACiM,YAAY,KAAK,CAAC,EAAE;QAC3BlJ,MAAM,CAACtE,IAAI,CAAC,aAAa,CAAC;MAC5B;MAEA,IAAIuB,IAAI,CAACiM,YAAY,KAAK,CAAC,EAAE;QAC3BlJ,MAAM,CAACtE,IAAI,CAAC,YAAY,CAAC;MAC3B;MAEA,OAAOsE,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,QAAQ;IAAAT,KAAA,EAAT,SAACa,MAAQA,CAAES,IAAI,EAAE;MACf,OAAOA,IAAI,CAACyC,GAAG;IACjB;EAAC;IAAAtD,GAAA,EAEA,SAAS;IAAAT,KAAA,EAAV,SAACwN,OAASA,CAAElM,IAAI,EAAE;MAChB,QAAQ,IAAI;QACV,KAAKA,IAAI,CAACmM,WAAW,KAAK,CAAC;UACzB,OAAO,IAAAjM,YAAM,EAAC,aAAa,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACoM,SAAS,CAAC,CAAC;QAC5D,KAAKpM,IAAI,CAACmM,WAAW,KAAK,CAAC;UACzB,OAAO,IAAAjM,YAAM,EAAC,gBAAgB,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqM,QAAQ,CAAC,EAAE,IAAI,CAACnL,OAAO,CAAClB,IAAI,CAACsM,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACpL,OAAO,CAAClB,IAAI,CAACoM,SAAS,CAAC,CAAC;QAC5H,KAAKpM,IAAI,CAACmM,WAAW,KAAK,CAAC,IAAI,EAAEnM,IAAI,CAACsM,QAAQ,IAAI,IAAI,CAAC;UACrD,OAAO,IAAApM,YAAM,EAAC,YAAY,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqM,QAAQ,CAAC,EAAE,IAAI,CAACnL,OAAO,CAAClB,IAAI,CAACoM,SAAS,CAAC,CAAC;QACxF,KAAKpM,IAAI,CAACmM,WAAW,KAAK,CAAC;UACzB,OAAO,IAAAjM,YAAM,EAAC,gBAAgB,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqM,QAAQ,CAAC,EAAE,IAAI,CAACnL,OAAO,CAAClB,IAAI,CAACsM,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACpL,OAAO,CAAClB,IAAI,CAACoM,SAAS,CAAC,CAAC;QAC5H,KAAKpM,IAAI,CAACmM,WAAW,KAAK,CAAC;UACzB,OAAO,IAAAjM,YAAM,EAAC,YAAY,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACqM,QAAQ,CAAC,EAAE,IAAI,CAACnL,OAAO,CAAClB,IAAI,CAACsM,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACpL,OAAO,CAAClB,IAAI,CAACoM,SAAS,CAAC,CAAC;QACxH,KAAKpM,IAAI,CAACmM,WAAW,KAAK,CAAC;UACzB,OAAO,IAAAjM,YAAM,EAAC,MAAM,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACoM,SAAS,CAAC,CAAC;QACrD,KAAKpM,IAAI,CAACmM,WAAW,KAAK,CAAC;UACzB;UACA,OAAOrM,IAAI,CAAC,SAAS,EAAEE,IAAI,CAAC;QAC5B;QACA;QACF,KAAKA,IAAI,CAACmM,WAAW,KAAK,CAAC;UACzB,OAAO,IAAAjM,YAAM,EAAC,YAAY,EAAE,IAAI,CAACgB,OAAO,CAAClB,IAAI,CAACoM,SAAS,CAAC,CAAC;QAC3D;UACE,OAAOtM,IAAI,CAAC,SAAS,EAAEE,IAAI,CAAC;MAChC;IACF;EAAC;IAAAb,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAAC6N,QAAUA,CAAEvM,IAAI,EAAE;MACjB,OAAO,IAAI,CAACkB,OAAO,CAAClB,IAAI,CAACoE,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAClD,OAAO,CAAClB,IAAI,CAACgC,QAAQ,CAAC;IACpE;EAAC;IAAA7C,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAAC8N,QAAUA,CAAExM,IAAI,EAAE;MAAA,IAAAyM,MAAA;MACjB,IAAI/M,kBAAC,CAACgN,IAAI,CAAC1M,IAAI,CAACkC,KAAK,CAAC,CAAC3C,MAAM,CAACkD,GAAG,KAAK,UAAU,EAAE;QAChD,OAAO,IAAI,CAACkK,eAAe,CAAC3M,IAAI,CAAC;MACnC;MAEA,IAAM+C,MAAM,GAAG,EAAE;MAEjB,IAAI/C,IAAI,CAAC4M,KAAK,EAAE;QACd7J,MAAM,CAACtE,IAAI,CAAC,OAAO,CAAC;MACtB;MAEA,IAAI0D,IAAI,GAAG,IAAI;MAEf,IAAInC,IAAI,CAAC6M,OAAO,IAAI,IAAI,EAAE;QACxB1K,IAAI,GAAGnC,IAAI,CAAC6M,OAAO,CAAC5L,GAAG,CAAC,UAAA0B,IAAI,EAAI;UAC9B,OAAO8J,MAAI,CAACvL,OAAO,CAACyB,IAAI,CAAC;QAC3B,CAAC,CAAC;MACJ;MAEA,IAAM5C,IAAI,GAAG,EAAE;MAEfA,IAAI,CAACtB,IAAI,CAAC,IAAI,CAACsB,IAAI,CAACC,IAAI,CAACkC,KAAK,EAAEC,IAAI,IAAIA,IAAI,CAAChB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;MAEzD,IAAInB,IAAI,CAAC8M,WAAW,IAAI,IAAI,EAAE;QAC5B/M,IAAI,CAACtB,IAAI,CAAC,IAAI,CAAC;MACjB;MAEAsE,MAAM,CAACtE,IAAI,CAACsB,IAAI,CAACoB,IAAI,CAAC,EAAE,CAAC,CAAC;MAE1B,OAAO4B,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,UAAU;IAAAT,KAAA,EAAX,SAACqO,QAAUA,CAAE/M,IAAI,EAAE;MACjB,IAAM+C,MAAM,GAAG,CAAE,MAAM,CAAE;MAEzBA,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACgN,IAAI,CAAC,CAAC;MACpCjK,MAAM,CAACtE,IAAI,CAAC,MAAM,CAAC;MACnBsE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAClB,IAAI,CAACiN,MAAM,CAAC,CAAC;MAEtC,OAAOlK,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA,EAEA,iBAAiB;IAAAT,KAAA,EAAlB,SAACwO,eAAiBA,CAAElN,IAAI,EAAE;MACxB,IAAIA,IAAI,CAACgD,IAAI,KAAK,CAAC,EAAE;QACnB,OAAO,IAAA9C,YAAM,EAAC,UAAU,EAAEF,IAAI,CAACpC,IAAI,CAAC;MACtC;MAEA,IAAIoC,IAAI,CAACgD,IAAI,KAAK,CAAC,EAAE;QACnB,IAAMpF,IAAI,GAAG;UACX,aAAa,EAAE,aAAa;UAC5B,yBAAyB,EAAE;QAC7B,CAAC,CAACoC,IAAI,CAACpC,IAAI,CAAC;QAEZ,OAAO,IAAAsC,YAAM,EAAC,WAAW,EACXtC,IAAI,EACJ,IAAI,CAACwD,YAAY,CAACpB,IAAI,CAACmC,IAAI,EAAE,QAAQ,CAAC,CAAChB,IAAI,CAAC,IAAI,CAAC,CAAC;MAClE;MAEA,IAAInB,IAAI,CAACgD,IAAI,KAAK,CAAC,EAAE;QACnB,OAAO,IAAA9C,YAAM,EAAC,mBAAmB,EAAEF,IAAI,CAACpC,IAAI,CAAC;MAC/C;MAEA,OAAO,IAAAsC,YAAM,EAAC,eAAe,EACfF,IAAI,CAACmN,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAC7BnN,IAAI,CAACpC,IAAI,EACT,IAAI,CAACwD,YAAY,CAACpB,IAAI,CAACmC,IAAI,EAAE,QAAQ,CAAC,CAAChB,IAAI,CAAC,IAAI,CAAC,CAAC;IAClE;EAAC;IAAAhC,GAAA,EAEA,kBAAkB;IAAAT,KAAA,EAAnB,SAAC0O,gBAAkBA,CAAEpN,IAAI,EAAE;MACzB,OAAO,IAAAE,YAAM,EAAC,SAAS,EAAEF,IAAI,CAACpC,IAAI,CAAC;IACrC;EAAC;IAAAuB,GAAA,EAEA,WAAW;IAAAT,KAAA,EAAZ,SAAC8M,SAAWA,CAAExL,IAAI,EAAEsB,OAAO,EAAE;MAAA,IAAA+L,MAAA;MAC3B,IAAMtK,MAAM,GAAG,EAAE;MAEjB,IAAIzB,OAAO,KAAK,QAAQ,EAAE;QACxB,IAAItB,IAAI,CAACpC,IAAI,EAAE;UACbmF,MAAM,CAACtE,IAAI,CAACuB,IAAI,CAACpC,IAAI,CAAC;QACxB;MACF;MAEA,IAAM0P,KAAK,GAAI,EAAEtN,IAAI,CAACuN,eAAe,IAAI,IAAI,CAAC,IAAI,EAAEvN,IAAI,CAACwN,WAAW,IAAI,IAAI,CAAE;MAE9E,IAAMC,YAAY,GAAG,IAAI,CAACC,mBAAmB,CAAC1N,IAAI,CAACyN,YAAY,EAAEzN,IAAI,CAAC2N,OAAO,EAAE3N,IAAI,CAAC4N,WAAW,EAAE5N,IAAI,CAAC6N,SAAS,CAAC;MAEhH,IAAIP,KAAK,IAAIhM,OAAO,KAAK,QAAQ,IAAI,EAAEtB,IAAI,CAACpC,IAAI,IAAI,IAAI,CAAC,IAAI6P,YAAY,CAACzP,MAAM,KAAK,CAAC,EAAE;QACtF,OAAO,IAAI;MACb;MAEA,IAAM8P,WAAW,GAAG,EAAE;MAEtB,IAAIC,SAAS,GAAG,KAAK;MAErB,IAAI/N,IAAI,CAACuN,eAAe,EAAE;QACxB,IAAMS,SAAS,GAAG,CAAE,cAAc,CAAE;QAEpC,IAAMrD,MAAM,GAAG3K,IAAI,CAACuN,eAAe,CAACtM,GAAG,CAAC,UAAA0B,IAAI;UAAA,OAAI0K,MAAI,CAACnM,OAAO,CAACyB,IAAI,CAAC;QAAA,EAAC;QAEnEqL,SAAS,CAACvP,IAAI,CAACkM,MAAM,CAACxJ,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjC2M,WAAW,CAACrP,IAAI,CAACuP,SAAS,CAAC7M,IAAI,CAAC,GAAG,CAAC,CAAC;QACrC4M,SAAS,GAAG,IAAI;MAClB;MAEA,IAAI/N,IAAI,CAACwN,WAAW,EAAE;QACpBM,WAAW,CAACrP,IAAI,CAAC,UAAU,CAAC;QAE5B,IAAMwP,MAAM,GAAGjO,IAAI,CAACwN,WAAW,CAACvM,GAAG,CAAC,UAAA0B,IAAI,EAAI;UAC1C,OAAO0K,MAAI,CAACnM,OAAO,CAACyB,IAAI,CAAC;QAC3B,CAAC,CAAC;QAEFmL,WAAW,CAACrP,IAAI,CAACwP,MAAM,CAAC9M,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnC4M,SAAS,GAAG,IAAI;MAClB;MAEA,IAAIN,YAAY,CAACzP,MAAM,EAAE;QACvB+P,SAAS,GAAG,IAAI;QAChBD,WAAW,CAACrP,IAAI,CAACgP,YAAY,CAAC;MAChC;MAEA,IAAIM,SAAS,IAAIzM,OAAO,KAAK,QAAQ,EAAE;QACrC,OAAOyB,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG2M,WAAW,CAAC3M,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;MAC9D;MAEA,OAAO4B,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC,GAAG2M,WAAW,CAAC3M,IAAI,CAAC,GAAG,CAAC;IACjD;EAAC;IAAAhC,GAAA,EAEA,YAAY;IAAAT,KAAA,EAAb,SAACwP,UAAYA,CAAElO,IAAI,EAAE;MACnB,IAAM+C,MAAM,GAAG,CAAE,MAAM,CAAE;MAEzB,IAAI/C,IAAI,CAACmO,SAAS,EAAE;QAClBpL,MAAM,CAACtE,IAAI,CAAC,WAAW,CAAC;MAC1B;MAEAsE,MAAM,CAACtE,IAAI,CAAC,IAAI,CAAC+C,IAAI,CAACxB,IAAI,CAACoO,IAAI,CAAC,CAAC;MAEjC,OAAOrL,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA;IAAAT,KAAA,EAED,SAAAgP,mBAAmBA,CAACW,OAAO,EAAEC,OAAO,EAAEV,WAAW,EAAEC,SAAS,EAAE;MAC5D,IAAMU,sBAAsB,GAAG,OAAO,CAAC,CAAC;MACxC,IAAMC,iBAAiB,GAAG,OAAO,CAAC,CAAC;MACnC,IAAMC,gBAAgB,GAAG,OAAO,CAAC,CAAC;MAClC,IAAMC,mBAAmB,GAAG,OAAO,CAAC,CAAC;MACrC,IAAMC,qCAAqC,GAAG,OAAO,CAAC,CAAC;MACvD,IAAMC,mCAAmC,GAAG,OAAO,CAAC,CAAC;MACrD,IAAMC,qCAAqC,GAAG,OAAO,CAAC,CAAC;MACvD,IAAMC,mCAAmC,GAAG,OAAO,CAAC,CAAC;MACrD,IAAMC,6BAA6B,GAAG,OAAO,CAAC,CAAC;MAC/C,IAAMC,2BAA2B,GAAG,OAAO,CAAC,CAAC;MAC7C,IAAMC,iCAAiC,GAAG,OAAO,CAAC,CAAC;MACnD,IAAMC,+BAA+B,GAAG,OAAO,CAAC,CAAC;MACjD,IAAMC,iCAAiC,GAAG,OAAO,CAAC,CAAC;MACnD,IAAMC,+BAA+B,GAAG,OAAO,CAAC,CAAC;;MAEjD,IAAI,EAAEf,OAAO,GAAGE,sBAAsB,CAAC,EAAE;QACvC,OAAO,EAAE;MACX;MAEA,IAAMxL,MAAM,GAAG,EAAE;MAEjB,IAAIuL,OAAO,IAAI,IAAI,EAAE;QACnBvL,MAAM,CAACtE,IAAI,CAAC6P,OAAO,CAAC;MACtB;MAEA,IAAID,OAAO,GAAGG,iBAAiB,EAAE;QAC/BzL,MAAM,CAACtE,IAAI,CAAC,OAAO,CAAC;MACtB;MAEA,IAAI4P,OAAO,GAAGI,gBAAgB,EAAE;QAC9B1L,MAAM,CAACtE,IAAI,CAAC,MAAM,CAAC;MACrB;MAEA,IAAM4Q,OAAO,GAAGhB,OAAO,GAAGK,mBAAmB;MAE7C,IAAIW,OAAO,EAAE;QACXtM,MAAM,CAACtE,IAAI,CAAC,SAAS,CAAC;MACxB;MAEA,IAAI4P,OAAO,GAAGM,qCAAqC,EAAE;QACnD5L,MAAM,CAACtE,IAAI,CAAC,qBAAqB,CAAC;MACpC;MAEA,IAAI4P,OAAO,GAAGQ,qCAAqC,EAAE;QACnD9L,MAAM,CAACtE,IAAI,CAAC,qBAAqB,CAAC;MACpC;MAEA,IAAI4P,OAAO,GAAGU,6BAA6B,EAAE;QAC3ChM,MAAM,CAACtE,IAAI,CAAC,aAAa,CAAC;MAC5B;MAEA,IAAI4P,OAAO,GAAGY,iCAAiC,EAAE;QAC/ClM,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAC0M,WAAW,CAAC,GAAG,YAAY,CAAC;MACvD;MAEA,IAAIS,OAAO,GAAGc,iCAAiC,EAAE;QAC/CpM,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAC0M,WAAW,CAAC,GAAG,YAAY,CAAC;MACvD;MAEA,IAAIyB,OAAO,EAAE;QACXtM,MAAM,CAACtE,IAAI,CAAC,KAAK,CAAC;QAElB,IAAI4P,OAAO,GAAGO,mCAAmC,EAAE;UACjD7L,MAAM,CAACtE,IAAI,CAAC,qBAAqB,CAAC;QACpC;QAEA,IAAI4P,OAAO,GAAGS,mCAAmC,EAAE;UACjD/L,MAAM,CAACtE,IAAI,CAAC,qBAAqB,CAAC;QACpC;QAEA,IAAI4P,OAAO,GAAGW,2BAA2B,EAAE;UACzCjM,MAAM,CAACtE,IAAI,CAAC,aAAa,CAAC;QAC5B;QAEA,IAAI4P,OAAO,GAAGa,+BAA+B,EAAE;UAC7CnM,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAC2M,SAAS,CAAC,GAAG,YAAY,CAAC;QACrD;QAEA,IAAIQ,OAAO,GAAGe,+BAA+B,EAAE;UAC7CrM,MAAM,CAACtE,IAAI,CAAC,IAAI,CAACyC,OAAO,CAAC2M,SAAS,CAAC,GAAG,YAAY,CAAC;QACrD;MACF;MAEA,OAAO9K,MAAM,CAAC5B,IAAI,CAAC,GAAG,CAAC;IACzB;EAAC;IAAAhC,GAAA;IAAAT,KAAA,EAED,SAAAiO,eAAeA,CAAC3M,IAAI,EAAE;MAAA,IAAAsP,OAAA;MACpB,IAAMvP,IAAI,GAAG,CAAE,UAAU,CAAE;MAE3B,IAAIC,IAAI,CAAC8M,WAAW,IAAI,IAAI,EAAE;QAC5B/M,IAAI,CAACtB,IAAI,CAAC,IAAI,CAAC;MACjB;MAEA,IAAIuB,IAAI,CAAC6M,OAAO,EAAE;QAChB,IAAMA,OAAO,GAAG7M,IAAI,CAAC6M,OAAO,CAAC5L,GAAG,CAAC,UAAA0B,IAAI;UAAA,OAAI2M,OAAI,CAACpO,OAAO,CAACyB,IAAI,CAAC;QAAA,EAAC;QAE5D,IAAI4M,SAAS,GAAG,IAAI,CAACC,QAAQ,CAAC3C,OAAO,CAAC,CAAC,CAAC,CAAC;;QAEzC;QACA,IAAI7M,IAAI,CAAC6M,OAAO,CAAC,CAAC,CAAC,IAAI7M,IAAI,CAAC6M,OAAO,CAAC,CAAC,CAAC,CAAC/I,OAAO,IAAI9D,IAAI,CAAC6M,OAAO,CAAC,CAAC,CAAC,CAAC/I,OAAO,CAACC,GAAG,CAACqC,OAAO,CAACC,IAAI,KAAK,KAAK,IAAIrG,IAAI,CAAC6M,OAAO,CAAC,CAAC,CAAC,IAAK7M,IAAI,CAAC6M,OAAO,CAAC,CAAC,CAAC,CAAC/I,OAAO,IAAI,IAAK,EAAE;UAC5JyL,SAAS,GAAG,KAAAnM,MAAA,CAAMpD,IAAI,CAAC6M,OAAO,CAAC,CAAC,CAAC,CAAC/I,OAAO,CAACC,GAAG,CAACqC,OAAO,CAACC,IAAI,OAAK;QACjE,CAAC,MAAM;UACLkJ,SAAS,GAAGA,SAAS,CAACtO,GAAG,CAAC,UAAAwO,IAAI,EAAI;YAChC,IAAIA,IAAI,KAAK,QAAQ,IAAI5C,OAAO,CAAC7O,MAAM,KAAK,CAAC,EAAE;cAC7C,OAAO,SAAS,GAAG0B,kBAAC,CAACgN,IAAI,CAACG,OAAO,CAAC,GAAG,GAAG;YAC1C;YAEA,OAAO4C,IAAI;UACb,CAAC,CAAC;QACJ;QAEA1P,IAAI,CAACtB,IAAI,CAAC8Q,SAAS,CAACpO,IAAI,CAAC,MAAM,CAAC,CAAC;MACnC;MAEA,OAAOpB,IAAI,CAACoB,IAAI,CAAC,GAAG,CAAC;IACvB;EAAC;IAAAhC,GAAA;IAAAT,KAAA,EAED,SAAA8Q,QAAQA,CAACE,IAAI,EAAE;MACb;MACA,IAAI,IAAI,CAACC,KAAK,IAAI,IAAI,EAAE;QACtB,IAAI,CAACA,KAAK,GAAG;UACX,CAAC,EAAE,QAAQ;UACX,CAAC,EAAE,OAAO;UACV,CAAC,EAAE,MAAM;UACT,CAAC,EAAE,KAAK;UACR,CAAC,EAAE,QAAQ;UACX,CAAC,EAAE,IAAI;UACP,CAAC,EAAE,KAAK;UACR,CAAC,EAAE,OAAO;UACV,CAAC,EAAE,YAAY;UACf,CAAC,EAAE,MAAM;UACT,EAAE,EAAE,MAAM;UACV,EAAE,EAAE,QAAQ;UACZ,EAAE,EAAE,QAAQ;UACZ,EAAE,EAAE,aAAa;UACjB,EAAE,EAAE,aAAa;UACjB,EAAE,EAAE,KAAK;UACT,EAAE,EAAE,KAAK;UACT,EAAE,EAAE,OAAO;UACX,EAAE,EAAE,MAAM;UACV,EAAE,EAAE,KAAK;UACT,EAAE,EAAE,YAAY;UAChB,EAAE,EAAE,WAAW;UACf,EAAE,EAAE,SAAS;UACb,EAAE,EAAE,SAAS;UACb,EAAE,EAAE,MAAM;UACV,EAAE,EAAE,QAAQ;UACZ,EAAE,EAAE,SAAS;UACb,EAAE,EAAE,YAAY;UAChB,EAAE,EAAE;QACN,CAAC;MACH;MAEA,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,EAAE;QACrB,IAAI,CAACA,IAAI,GAAGlQ,kBAAC,CAACmQ,MAAM,CAAC,IAAI,CAACF,KAAK,CAAC;MAClC;MAEA,IAAI,IAAI,CAACG,SAAS,IAAI,IAAI,EAAE;QAC1B,IAAI,CAACA,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAACA,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACG,IAAI,CAAE,GAAG,CAAE,MAAM,CAAE;QAClD,IAAI,CAACD,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACI,KAAK,CAAE,GAAG,CAAE,OAAO,CAAE;QACpD,IAAI,CAACF,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACK,GAAG,CAAE,GAAG,CAAE,KAAK,CAAE;QAChD,IAAI,CAACH,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACM,IAAI,CAAE,GAAG,CAAE,MAAM,CAAE;QAClD,IAAI,CAACJ,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACO,MAAM,CAAE,GAAG,CAAE,QAAQ,CAAE;QACtD,IAAI,CAACL,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACQ,MAAM,CAAE,GAAG,CAAE,QAAQ,CAAE;QACtD,IAAI,CAACN,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACG,IAAI,GAAG,CAAC,IAAI,IAAI,CAACH,IAAI,CAACI,KAAK,CAAE,GAAG,CAAE,MAAM,EAAE,OAAO,CAAE;QAClF,IAAI,CAACF,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACK,GAAG,GAAG,CAAC,IAAI,IAAI,CAACL,IAAI,CAACM,IAAI,CAAE,GAAG,CAAE,KAAK,EAAE,MAAM,CAAE;QAC9E,IAAI,CAACJ,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACK,GAAG,GAAG,CAAC,IAAI,IAAI,CAACL,IAAI,CAACM,IAAI,GAAG,CAAC,IAAI,IAAI,CAACN,IAAI,CAACO,MAAM,CAAE,GAAG,CAAE,KAAK,EAAE,QAAQ,CAAE;QACxG,IAAI,CAACL,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACK,GAAG,GAAG,CAAC,IAAI,IAAI,CAACL,IAAI,CAACM,IAAI,GAAG,CAAC,IAAI,IAAI,CAACN,IAAI,CAACO,MAAM,GAAG,CAAC,IAAI,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAE,GAAG,CAAE,KAAK,EAAE,QAAQ,CAAE;QAChI,IAAI,CAACN,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACM,IAAI,GAAG,CAAC,IAAI,IAAI,CAACN,IAAI,CAACO,MAAM,CAAE,GAAG,CAAE,MAAM,EAAE,QAAQ,CAAE;QACpF,IAAI,CAACL,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACM,IAAI,GAAG,CAAC,IAAI,IAAI,CAACN,IAAI,CAACO,MAAM,GAAG,CAAC,IAAI,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAE,GAAG,CAAE,MAAM,EAAE,QAAQ,CAAE;QAC5G,IAAI,CAACN,SAAS,CAAE,CAAC,IAAI,IAAI,CAACF,IAAI,CAACO,MAAM,GAAG,CAAC,IAAI,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAE,GAAG,CAAE,QAAQ,EAAE,QAAQ,CAAE;;QAExF;QACA;QACA,IAAI,CAACN,SAAS,CAAC,IAAI,CAACO,mBAAmB,GAAG,OAAO,CAAC,GAAG,EAAE;MACzD;MAEA,OAAO,IAAI,CAACP,SAAS,CAACJ,IAAI,CAACjS,QAAQ,CAAC,CAAC,CAAC;IACxC;EAAC;IAAA0B,GAAA;IAAAT,KAAA,EArzCD,SAAOwC,OAAOA,CAACoP,KAAK,EAAE;MACpB,OAAO,IAAI1P,QAAQ,CAAC0P,KAAK,CAAC,CAACvP,YAAY,CAAC,CAAC;IAC3C;EAAC;AAAA","ignoreList":[]}